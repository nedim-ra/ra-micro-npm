import c from "../utils.js";
import h from "../helpers/null.js";
import m from "./xhr.js";
import u from "./fetch.js";
import a from "../core/AxiosError.js";
const p = {
  http: h,
  xhr: m,
  fetch: u
}, d = (e) => `- ${e}`, b = (e) => c.isFunction(e) || e === null || e === !1, y = {
  getAdapter: (e) => {
    e = c.isArray(e) ? e : [e];
    const { length: i } = e;
    let o, r;
    const s = {};
    for (let t = 0; t < i; t++) {
      o = e[t];
      let n;
      if (r = o, !b(o) && (r = p[(n = String(o)).toLowerCase()], r === void 0))
        throw new a(`Unknown adapter '${n}'`);
      if (r)
        break;
      s[n || "#" + t] = r;
    }
    if (!r) {
      const t = Object.entries(s).map(
        ([f, l]) => `adapter ${f} ` + (l === !1 ? "is not supported by the environment" : "is not available in the build")
      );
      let n = i ? t.length > 1 ? `since :
` + t.map(d).join(`
`) : " " + d(t[0]) : "as no adapter specified";
      throw new a(
        "There is no suitable adapter to dispatch the request " + n,
        "ERR_NOT_SUPPORT"
      );
    }
    return r;
  },
  adapters: p
};
export {
  y as default
};
//# sourceMappingURL=adapters.js.map
