import { VERSION as b } from "../env/data.js";
import e from "../core/AxiosError.js";
const l = {}, f = {};
l.transitional = function(i, o, a) {
  function s(t, n) {
    return "[Axios v" + b + "] Transitional option '" + t + "'" + n + (a ? ". " + a : "");
  }
  return (t, n, c) => {
    if (i === !1)
      throw new e(
        s(n, " has been removed" + (o ? " in " + o : "")),
        e.ERR_DEPRECATED
      );
    return o && !f[n] && (f[n] = !0, console.warn(
      s(
        n,
        " has been deprecated since v" + o + " and will be removed in the near future"
      )
    )), i ? i(t, n, c) : !0;
  };
};
function d(r, i, o) {
  if (typeof r != "object")
    throw new e("options must be an object", e.ERR_BAD_OPTION_VALUE);
  const a = Object.keys(r);
  let s = a.length;
  for (; s-- > 0; ) {
    const t = a[s], n = i[t];
    if (n) {
      const c = r[t], u = c === void 0 || n(c, t, r);
      if (u !== !0)
        throw new e("option " + t + " must be " + u, e.ERR_BAD_OPTION_VALUE);
      continue;
    }
    if (o !== !0)
      throw new e("Unknown option " + t, e.ERR_BAD_OPTION);
  }
}
const h = {
  assertOptions: d,
  validators: l
};
export {
  h as default
};
//# sourceMappingURL=validator.js.map
