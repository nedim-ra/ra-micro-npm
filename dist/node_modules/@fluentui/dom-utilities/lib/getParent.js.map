{"version":3,"file":"getParent.js","sources":["../../../../../node_modules/@fluentui/dom-utilities/lib/getParent.js"],"sourcesContent":["import { getVirtualParent } from './getVirtualParent';\n/**\n * Gets the element which is the parent of a given element.\n * If `allowVirtuaParents` is `true`, this method prefers the virtual parent over\n * real DOM parent when present.\n *\n * @public\n */\nexport function getParent(child, allowVirtualParents) {\n    var _a, _b;\n    if (allowVirtualParents === void 0) { allowVirtualParents = true; }\n    if (!child) {\n        return null;\n    }\n    var parent = allowVirtualParents && getVirtualParent(child);\n    if (parent) {\n        return parent;\n    }\n    // Support looking for parents in shadow DOM\n    if (typeof child.assignedElements !== 'function' && ((_a = child.assignedSlot) === null || _a === void 0 ? void 0 : _a.parentNode)) {\n        // Element is slotted\n        return child.assignedSlot;\n    }\n    else if (((_b = child.parentNode) === null || _b === void 0 ? void 0 : _b.nodeType) === 11) {\n        // nodeType 11 is DOCUMENT_FRAGMENT\n        // Element is in shadow root\n        return child.parentNode.host;\n    }\n    else {\n        return child.parentNode;\n    }\n}\n//# sourceMappingURL=getParent.js.map"],"names":["getParent","child","allowVirtualParents","_a","_b","parent","getVirtualParent"],"mappings":";AAQO,SAASA,EAAUC,GAAOC,GAAqB;AAClD,MAAIC,GAAIC;AAER,MADIF,MAAwB,WAAUA,IAAsB,KACxD,CAACD;AACD,WAAO;AAEX,MAAII,IAASH,KAAuBI,EAAiBL,CAAK;AAC1D,SAAII,MAIA,OAAOJ,EAAM,oBAAqB,eAAgB,GAAAE,IAAKF,EAAM,kBAAkB,QAAQE,MAAO,WAAkBA,EAAG,cAE5GF,EAAM,iBAENG,IAAKH,EAAM,gBAAgB,QAAQG,MAAO,SAAS,SAASA,EAAG,cAAc,KAG7EH,EAAM,WAAW,OAGjBA,EAAM;AAErB;","x_google_ignoreList":[0]}