{"version":3,"file":"contextualMenuUtility.js","sources":["../../../../../../../node_modules/@fluentui/react/lib/utilities/contextualMenu/contextualMenuUtility.js"],"sourcesContent":["/**\n * Determines the effective checked state of a menu item.\n *\n * @param item {IContextualMenuItem} to get the check state of.\n * @returns {true} if the item is checked.\n * @returns {false} if the item is unchecked.\n * @returns {null} if the item is not checkable.\n */\nexport function getIsChecked(item) {\n    if (item.canCheck) {\n        return !!(item.isChecked || item.checked);\n    }\n    if (typeof item.isChecked === 'boolean') {\n        return item.isChecked;\n    }\n    if (typeof item.checked === 'boolean') {\n        return item.checked;\n    }\n    // Item is not checkable.\n    return null;\n}\nexport function hasSubmenu(item) {\n    // eslint-disable-next-line deprecation/deprecation\n    return !!(item.subMenuProps || item.items);\n}\nexport function isItemDisabled(item) {\n    return !!(item.isDisabled || item.disabled);\n}\nexport function getMenuItemAriaRole(item) {\n    var isChecked = getIsChecked(item);\n    var canCheck = isChecked !== null;\n    return canCheck ? 'menuitemcheckbox' : 'menuitem';\n}\n//# sourceMappingURL=contextualMenuUtility.js.map"],"names":["getIsChecked","item","hasSubmenu","isItemDisabled","getMenuItemAriaRole","isChecked","canCheck"],"mappings":"AAQO,SAASA,EAAaC,GAAM;AAC/B,SAAIA,EAAK,WACE,CAAC,EAAEA,EAAK,aAAaA,EAAK,WAEjC,OAAOA,EAAK,aAAc,YACnBA,EAAK,YAEZ,OAAOA,EAAK,WAAY,YACjBA,EAAK,UAGT;AACX;AACO,SAASC,EAAWD,GAAM;AAE7B,SAAO,CAAC,EAAEA,EAAK,gBAAgBA,EAAK;AACxC;AACO,SAASE,EAAeF,GAAM;AACjC,SAAO,CAAC,EAAEA,EAAK,cAAcA,EAAK;AACtC;AACO,SAASG,EAAoBH,GAAM;AACtC,MAAII,IAAYL,EAAaC,CAAI,GAC7BK,IAAWD,MAAc;AAC7B,SAAOC,IAAW,qBAAqB;AAC3C;","x_google_ignoreList":[0]}