{"version":3,"file":"Image.base.js","sources":["../../../../../../../node_modules/@fluentui/react/lib/components/Image/Image.base.js"],"sourcesContent":["import { __assign } from \"tslib\";\nimport * as React from 'react';\nimport { classNamesFunction, getNativeProps, imgProperties } from '../../Utilities';\nimport { ImageCoverStyle, ImageFit, ImageLoadState } from './Image.types';\nimport { useIsomorphicLayoutEffect, useMergedRefs } from '@fluentui/react-hooks';\nvar getClassNames = classNamesFunction();\nvar SVG_REGEX = /\\.svg$/i;\nvar KEY_PREFIX = 'fabricImage';\nfunction useLoadState(props, imageElement) {\n    var onLoadingStateChange = props.onLoadingStateChange, onLoad = props.onLoad, onError = props.onError, src = props.src;\n    var _a = React.useState(ImageLoadState.notLoaded), loadState = _a[0], setLoadState = _a[1];\n    useIsomorphicLayoutEffect(function () {\n        // If the src property changes, reset the load state\n        // (does nothing if the load state is already notLoaded)\n        setLoadState(ImageLoadState.notLoaded);\n    }, [src]);\n    // eslint-disable-next-line react-hooks/exhaustive-deps -- intended to run every render\n    React.useEffect(function () {\n        if (loadState === ImageLoadState.notLoaded) {\n            // testing if naturalWidth and naturalHeight are greater than zero is better than checking\n            // .complete, because .complete will also be set to true if the image breaks. However,\n            // for some browsers, SVG images do not have a naturalWidth or naturalHeight, so fall back\n            // to checking .complete for these images.\n            var isLoaded = imageElement.current\n                ? (src && imageElement.current.naturalWidth > 0 && imageElement.current.naturalHeight > 0) ||\n                    (imageElement.current.complete && SVG_REGEX.test(src))\n                : false;\n            if (isLoaded) {\n                setLoadState(ImageLoadState.loaded);\n            }\n        }\n    });\n    React.useEffect(function () {\n        onLoadingStateChange === null || onLoadingStateChange === void 0 ? void 0 : onLoadingStateChange(loadState);\n        // eslint-disable-next-line react-hooks/exhaustive-deps -- should only run when loadState changes\n    }, [loadState]);\n    var onImageLoaded = React.useCallback(function (ev) {\n        onLoad === null || onLoad === void 0 ? void 0 : onLoad(ev);\n        if (src) {\n            setLoadState(ImageLoadState.loaded);\n        }\n    }, [src, onLoad]);\n    var onImageError = React.useCallback(function (ev) {\n        onError === null || onError === void 0 ? void 0 : onError(ev);\n        setLoadState(ImageLoadState.error);\n    }, [onError]);\n    return [loadState, onImageLoaded, onImageError];\n}\nexport var ImageBase = React.forwardRef(function (props, forwardedRef) {\n    var frameElement = React.useRef();\n    var imageElement = React.useRef();\n    var _a = useLoadState(props, imageElement), loadState = _a[0], onImageLoaded = _a[1], onImageError = _a[2];\n    var imageProps = getNativeProps(props, imgProperties, [\n        'width',\n        'height',\n    ]);\n    var src = props.src, alt = props.alt, width = props.width, height = props.height, _b = props.shouldFadeIn, shouldFadeIn = _b === void 0 ? true : _b, shouldStartVisible = props.shouldStartVisible, className = props.className, imageFit = props.imageFit, role = props.role, maximizeFrame = props.maximizeFrame, styles = props.styles, theme = props.theme, loading = props.loading;\n    var coverStyle = useCoverStyle(props, loadState, imageElement, frameElement);\n    var classNames = getClassNames(styles, {\n        theme: theme,\n        className: className,\n        width: width,\n        height: height,\n        maximizeFrame: maximizeFrame,\n        shouldFadeIn: shouldFadeIn,\n        shouldStartVisible: shouldStartVisible,\n        isLoaded: loadState === ImageLoadState.loaded || (loadState === ImageLoadState.notLoaded && props.shouldStartVisible),\n        isLandscape: coverStyle === ImageCoverStyle.landscape,\n        isCenter: imageFit === ImageFit.center,\n        isCenterContain: imageFit === ImageFit.centerContain,\n        isCenterCover: imageFit === ImageFit.centerCover,\n        isContain: imageFit === ImageFit.contain,\n        isCover: imageFit === ImageFit.cover,\n        isNone: imageFit === ImageFit.none,\n        isError: loadState === ImageLoadState.error,\n        isNotImageFit: imageFit === undefined,\n    });\n    // If image dimensions aren't specified, the natural size of the image is used.\n    return (React.createElement(\"div\", { className: classNames.root, style: { width: width, height: height }, ref: frameElement },\n        React.createElement(\"img\", __assign({}, imageProps, { onLoad: onImageLoaded, onError: onImageError, key: KEY_PREFIX + props.src || '', className: classNames.image, ref: useMergedRefs(imageElement, forwardedRef), src: src, alt: alt, role: role, loading: loading }))));\n});\nImageBase.displayName = 'ImageBase';\nfunction useCoverStyle(props, loadState, imageElement, frameElement) {\n    var previousLoadState = React.useRef(loadState);\n    var coverStyle = React.useRef();\n    if (coverStyle === undefined ||\n        (previousLoadState.current === ImageLoadState.notLoaded && loadState === ImageLoadState.loaded)) {\n        coverStyle.current = computeCoverStyle(props, loadState, imageElement, frameElement);\n    }\n    previousLoadState.current = loadState;\n    return coverStyle.current;\n}\nfunction computeCoverStyle(props, loadState, imageElement, frameElement) {\n    var imageFit = props.imageFit, width = props.width, height = props.height;\n    // Do not compute cover style if it was already specified in props\n    if (props.coverStyle !== undefined) {\n        return props.coverStyle;\n    }\n    else if (loadState === ImageLoadState.loaded &&\n        (imageFit === ImageFit.cover ||\n            imageFit === ImageFit.contain ||\n            imageFit === ImageFit.centerContain ||\n            imageFit === ImageFit.centerCover) &&\n        imageElement.current &&\n        frameElement.current) {\n        // Determine the desired ratio using the width and height props.\n        // If those props aren't available, measure measure the frame.\n        var desiredRatio = void 0;\n        if (typeof width === 'number' &&\n            typeof height === 'number' &&\n            imageFit !== ImageFit.centerContain &&\n            imageFit !== ImageFit.centerCover) {\n            desiredRatio = width / height;\n        }\n        else {\n            desiredRatio = frameElement.current.clientWidth / frameElement.current.clientHeight;\n        }\n        // Examine the source image to determine its original ratio.\n        var naturalRatio = imageElement.current.naturalWidth / imageElement.current.naturalHeight;\n        // Should we crop from the top or the sides?\n        if (naturalRatio > desiredRatio) {\n            return ImageCoverStyle.landscape;\n        }\n    }\n    return ImageCoverStyle.portrait;\n}\n//# sourceMappingURL=Image.base.js.map"],"names":["getClassNames","classNamesFunction","SVG_REGEX","KEY_PREFIX","useLoadState","props","imageElement","onLoadingStateChange","onLoad","onError","src","_a","React","ImageLoadState","loadState","setLoadState","useIsomorphicLayoutEffect","isLoaded","onImageLoaded","ev","onImageError","ImageBase","forwardedRef","frameElement","imageProps","getNativeProps","imgProperties","alt","width","height","_b","shouldFadeIn","shouldStartVisible","className","imageFit","role","maximizeFrame","styles","theme","loading","coverStyle","useCoverStyle","classNames","ImageCoverStyle","ImageFit","__assign","useMergedRefs","previousLoadState","computeCoverStyle","desiredRatio","naturalRatio"],"mappings":"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","x_google_ignoreList":[0]}