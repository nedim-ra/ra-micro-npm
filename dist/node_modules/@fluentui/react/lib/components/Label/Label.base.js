import { __extends as h, __assign as u } from "../../../../../tslib/tslib.es6.js";
import * as t from "react";
import { getNativeProps as N, divProperties as b } from "../../../../utilities/lib/properties.js";
import { classNamesFunction as f } from "../../../../utilities/lib/classNamesFunction.js";
var v = /* @__PURE__ */ f({
  // Label is used a lot by other components.
  // It's likely to see expected cases which pass different className to the Label.
  // Therefore setting a larger cache size.
  cacheSize: 100
}), q = (
  /** @class */
  /* @__PURE__ */ function(s) {
    h(a, s);
    function a() {
      return s !== null && s.apply(this, arguments) || this;
    }
    return a.prototype.render = function() {
      var e = this.props, r = e.as, i = r === void 0 ? "label" : r, o = e.children, l = e.className, m = e.disabled, n = e.styles, c = e.required, d = e.theme, p = v(n, {
        className: l,
        disabled: m,
        required: c,
        theme: d
      });
      return t.createElement(i, u({}, N(this.props, b), { className: p.root }), o);
    }, a;
  }(t.Component)
);
export {
  q as LabelBase
};
//# sourceMappingURL=Label.base.js.map
