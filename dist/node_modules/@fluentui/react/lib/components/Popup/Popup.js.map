{"version":3,"file":"Popup.js","sources":["../../../../../../../node_modules/@fluentui/react/lib/components/Popup/Popup.js"],"sourcesContent":["import { __assign } from \"tslib\";\nimport * as React from 'react';\nimport { KeyCodes, divProperties, doesElementContainFocus, getDocument, getNativeProps, getPropsWithDefaults, getWindow, modalize, } from '../../Utilities';\nimport { useMergedRefs, useAsync, useOnEvent } from '@fluentui/react-hooks';\nimport { useWindow } from '@fluentui/react-window-provider';\nfunction useScrollbarAsync(props, root) {\n    var async = useAsync();\n    var _a = React.useState(false), needsVerticalScrollBarState = _a[0], setNeedsVerticalScrollBar = _a[1];\n    React.useEffect(function () {\n        async.requestAnimationFrame(function () {\n            var _a;\n            // If overflowY is overridden, don't waste time calculating whether the scrollbar is necessary.\n            if (props.style && props.style.overflowY) {\n                return;\n            }\n            var needsVerticalScrollBar = false;\n            if (root && root.current && ((_a = root.current) === null || _a === void 0 ? void 0 : _a.firstElementChild)) {\n                // ClientHeight returns the client height of an element rounded to an\n                // integer. On some browsers at different zoom levels this rounding\n                // can generate different results for the root container and child even\n                // though they are the same height. This causes us to show a scroll bar\n                // when not needed. Ideally we would use BoundingClientRect().height\n                // instead however seems that the API is 90% slower than using ClientHeight.\n                // Therefore instead we will calculate the difference between heights and\n                // allow for a 1px difference to still be considered ok and not show the\n                // scroll bar.\n                var rootHeight = root.current.clientHeight;\n                var firstChildHeight = root.current.firstElementChild.clientHeight;\n                if (rootHeight > 0 && firstChildHeight > rootHeight) {\n                    needsVerticalScrollBar = firstChildHeight - rootHeight > 1;\n                }\n            }\n            if (needsVerticalScrollBarState !== needsVerticalScrollBar) {\n                setNeedsVerticalScrollBar(needsVerticalScrollBar);\n            }\n        });\n        return function () { return async.dispose(); };\n    });\n    return needsVerticalScrollBarState;\n}\nfunction defaultFocusRestorer(options) {\n    var originalElement = options.originalElement, containsFocus = options.containsFocus;\n    if (originalElement && containsFocus && originalElement !== getWindow()) {\n        // Make sure that the focus method actually exists\n        // In some cases the object might exist but not be a real element.\n        // This is primarily for IE 11 and should be removed once IE 11 is no longer in use.\n        // This is wrapped in a setTimeout because of a React 16 bug that is resolved in 17.\n        // Once we move to 17, the setTimeout should be removed (ref: https://github.com/facebook/react/issues/17894#issuecomment-656094405)\n        setTimeout(function () {\n            var _a;\n            (_a = originalElement.focus) === null || _a === void 0 ? void 0 : _a.call(originalElement);\n        }, 0);\n    }\n}\nfunction useRestoreFocus(props, root) {\n    var _a = props.onRestoreFocus, onRestoreFocus = _a === void 0 ? defaultFocusRestorer : _a;\n    var originalFocusedElement = React.useRef();\n    var containsFocus = React.useRef(false);\n    React.useEffect(function () {\n        originalFocusedElement.current = getDocument().activeElement;\n        if (doesElementContainFocus(root.current)) {\n            containsFocus.current = true;\n        }\n        return function () {\n            var _a;\n            onRestoreFocus === null || onRestoreFocus === void 0 ? void 0 : onRestoreFocus({\n                originalElement: originalFocusedElement.current,\n                containsFocus: containsFocus.current,\n                documentContainsFocus: ((_a = getDocument()) === null || _a === void 0 ? void 0 : _a.hasFocus()) || false,\n            });\n            // De-reference DOM Node to avoid retainment via transpiled closure of _onKeyDown\n            originalFocusedElement.current = undefined;\n        };\n        // eslint-disable-next-line react-hooks/exhaustive-deps -- should only run on first render\n    }, []);\n    useOnEvent(root, 'focus', React.useCallback(function () {\n        containsFocus.current = true;\n    }, []), true);\n    useOnEvent(root, 'blur', React.useCallback(function (ev) {\n        /** The popup should update this._containsFocus when:\n         * relatedTarget exists AND\n         * the relatedTarget is not contained within the popup.\n         * If the relatedTarget is within the popup, that means the popup still has focus\n         * and focused moved from one element to another within the popup.\n         * If relatedTarget is undefined or null that usually means that a\n         * keyboard event occurred and focus didn't change\n         */\n        if (root.current && ev.relatedTarget && !root.current.contains(ev.relatedTarget)) {\n            containsFocus.current = false;\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps -- should only run on first render\n    }, []), true);\n}\nfunction useHideSiblingNodes(props, root) {\n    // eslint-disable-next-line deprecation/deprecation\n    var shouldHideSiblings = String(props['aria-modal']).toLowerCase() === 'true' && props.enableAriaHiddenSiblings;\n    React.useEffect(function () {\n        if (!(shouldHideSiblings && root.current)) {\n            return;\n        }\n        var unmodalize = modalize(root.current);\n        return unmodalize;\n    }, [root, shouldHideSiblings]);\n}\n/**\n * This adds accessibility to Dialog and Panel controls\n */\nexport var Popup = React.forwardRef(function (propsWithoutDefaults, forwardedRef) {\n    var props = getPropsWithDefaults({ shouldRestoreFocus: true, enableAriaHiddenSiblings: true }, propsWithoutDefaults);\n    var root = React.useRef();\n    var mergedRootRef = useMergedRefs(root, forwardedRef);\n    useHideSiblingNodes(props, root);\n    useRestoreFocus(props, root);\n    var role = props.role, className = props.className, ariaLabel = props.ariaLabel, ariaLabelledBy = props.ariaLabelledBy, ariaDescribedBy = props.ariaDescribedBy, style = props.style, children = props.children, onDismiss = props.onDismiss;\n    var needsVerticalScrollBar = useScrollbarAsync(props, root);\n    var onKeyDown = React.useCallback(function (ev) {\n        // eslint-disable-next-line deprecation/deprecation\n        switch (ev.which) {\n            case KeyCodes.escape:\n                if (onDismiss) {\n                    onDismiss(ev);\n                    ev.preventDefault();\n                    ev.stopPropagation();\n                }\n                break;\n        }\n    }, [onDismiss]);\n    var win = useWindow();\n    useOnEvent(win, 'keydown', onKeyDown);\n    return (React.createElement(\"div\", __assign({ ref: mergedRootRef }, getNativeProps(props, divProperties), { className: className, role: role, \"aria-label\": ariaLabel, \"aria-labelledby\": ariaLabelledBy, \"aria-describedby\": ariaDescribedBy, onKeyDown: onKeyDown, style: __assign({ overflowY: needsVerticalScrollBar ? 'scroll' : undefined, outline: 'none' }, style) }), children));\n});\nPopup.displayName = 'Popup';\n//# sourceMappingURL=Popup.js.map"],"names":["useScrollbarAsync","props","root","async","useAsync","_a","React","needsVerticalScrollBarState","setNeedsVerticalScrollBar","needsVerticalScrollBar","rootHeight","firstChildHeight","defaultFocusRestorer","options","originalElement","containsFocus","getWindow","useRestoreFocus","onRestoreFocus","originalFocusedElement","getDocument","doesElementContainFocus","useOnEvent","ev","useHideSiblingNodes","shouldHideSiblings","unmodalize","modalize","Popup","propsWithoutDefaults","forwardedRef","getPropsWithDefaults","mergedRootRef","useMergedRefs","role","className","ariaLabel","ariaLabelledBy","ariaDescribedBy","style","children","onDismiss","onKeyDown","KeyCodes","win","useWindow","__assign","getNativeProps","divProperties"],"mappings":"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","x_google_ignoreList":[0]}