{"version":3,"file":"Checkbox.styles.js","sources":["../../../../../../../node_modules/@fluentui/react/lib/components/Checkbox/Checkbox.styles.js"],"sourcesContent":["import { __assign } from \"tslib\";\nimport { HighContrastSelector, getGlobalClassNames, getHighContrastNoAdjustStyle } from '@fluentui/style-utilities';\nimport { IsFocusVisibleClassName } from '@fluentui/utilities';\nvar GlobalClassNames = {\n    root: 'ms-Checkbox',\n    label: 'ms-Checkbox-label',\n    checkbox: 'ms-Checkbox-checkbox',\n    checkmark: 'ms-Checkbox-checkmark',\n    text: 'ms-Checkbox-text',\n};\nvar MS_CHECKBOX_LABEL_SIZE = '20px';\nvar MS_CHECKBOX_TRANSITION_DURATION = '200ms';\nvar MS_CHECKBOX_TRANSITION_TIMING = 'cubic-bezier(.4, 0, .23, 1)';\nexport var getStyles = function (props) {\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t;\n    var className = props.className, theme = props.theme, reversed = props.reversed, checked = props.checked, disabled = props.disabled, isUsingCustomLabelRender = props.isUsingCustomLabelRender, indeterminate = props.indeterminate;\n    var semanticColors = theme.semanticColors, effects = theme.effects, palette = theme.palette, fonts = theme.fonts;\n    var classNames = getGlobalClassNames(GlobalClassNames, theme);\n    var checkmarkFontColor = semanticColors.inputForegroundChecked;\n    // TODO: after updating the semanticColors slots mapping this needs to be semanticColors.inputBorder\n    var checkmarkFontColorHovered = palette.neutralSecondary;\n    // TODO: after updating the semanticColors slots mapping this needs to be semanticColors.smallInputBorder\n    var checkboxBorderColor = palette.neutralPrimary;\n    var checkboxBorderIndeterminateColor = semanticColors.inputBackgroundChecked;\n    var checkboxBorderColorChecked = semanticColors.inputBackgroundChecked;\n    var checkboxBorderColorDisabled = semanticColors.disabledBodySubtext;\n    var checkboxBorderHoveredColor = semanticColors.inputBorderHovered;\n    var checkboxBorderIndeterminateHoveredColor = semanticColors.inputBackgroundCheckedHovered;\n    var checkboxBackgroundChecked = semanticColors.inputBackgroundChecked;\n    // TODO: after updating the semanticColors slots mapping the following 2 tokens need to be\n    // semanticColors.inputBackgroundCheckedHovered\n    var checkboxBackgroundCheckedHovered = semanticColors.inputBackgroundCheckedHovered;\n    var checkboxBorderColorCheckedHovered = semanticColors.inputBackgroundCheckedHovered;\n    var checkboxHoveredTextColor = semanticColors.inputTextHovered;\n    var checkboxBackgroundDisabledChecked = semanticColors.disabledBodySubtext;\n    var checkboxTextColor = semanticColors.bodyText;\n    var checkboxTextColorDisabled = semanticColors.disabledText;\n    var indeterminateDotStyles = [\n        (_a = {\n                content: '\"\"',\n                borderRadius: effects.roundedCorner2,\n                position: 'absolute',\n                width: 10,\n                height: 10,\n                top: 4,\n                left: 4,\n                boxSizing: 'border-box',\n                borderWidth: 5,\n                borderStyle: 'solid',\n                borderColor: disabled ? checkboxBorderColorDisabled : checkboxBorderIndeterminateColor,\n                transitionProperty: 'border-width, border, border-color',\n                transitionDuration: MS_CHECKBOX_TRANSITION_DURATION,\n                transitionTimingFunction: MS_CHECKBOX_TRANSITION_TIMING\n            },\n            _a[HighContrastSelector] = {\n                borderColor: 'WindowText',\n            },\n            _a),\n    ];\n    return {\n        root: [\n            classNames.root,\n            {\n                position: 'relative',\n                display: 'flex',\n            },\n            reversed && 'reversed',\n            checked && 'is-checked',\n            !disabled && 'is-enabled',\n            disabled && 'is-disabled',\n            !disabled && [\n                !checked && (_b = {},\n                    _b[\":hover .\".concat(classNames.checkbox)] = (_c = {\n                            borderColor: checkboxBorderHoveredColor\n                        },\n                        _c[HighContrastSelector] = {\n                            borderColor: 'Highlight',\n                        },\n                        _c),\n                    _b[\":focus .\".concat(classNames.checkbox)] = { borderColor: checkboxBorderHoveredColor },\n                    _b[\":hover .\".concat(classNames.checkmark)] = (_d = {\n                            color: checkmarkFontColorHovered,\n                            opacity: '1'\n                        },\n                        _d[HighContrastSelector] = {\n                            color: 'Highlight',\n                        },\n                        _d),\n                    _b),\n                checked &&\n                    !indeterminate && (_e = {},\n                    _e[\":hover .\".concat(classNames.checkbox)] = {\n                        background: checkboxBackgroundCheckedHovered,\n                        borderColor: checkboxBorderColorCheckedHovered,\n                    },\n                    _e[\":focus .\".concat(classNames.checkbox)] = {\n                        background: checkboxBackgroundCheckedHovered,\n                        borderColor: checkboxBorderColorCheckedHovered,\n                    },\n                    _e[HighContrastSelector] = (_f = {},\n                        _f[\":hover .\".concat(classNames.checkbox)] = {\n                            background: 'Highlight',\n                            borderColor: 'Highlight',\n                        },\n                        _f[\":focus .\".concat(classNames.checkbox)] = {\n                            background: 'Highlight',\n                        },\n                        _f[\":focus:hover .\".concat(classNames.checkbox)] = {\n                            background: 'Highlight',\n                        },\n                        _f[\":focus:hover .\".concat(classNames.checkmark)] = {\n                            color: 'Window',\n                        },\n                        _f[\":hover .\".concat(classNames.checkmark)] = {\n                            color: 'Window',\n                        },\n                        _f),\n                    _e),\n                indeterminate && (_g = {},\n                    _g[\":hover .\".concat(classNames.checkbox, \", :hover .\").concat(classNames.checkbox, \":after\")] = (_h = {\n                            borderColor: checkboxBorderIndeterminateHoveredColor\n                        },\n                        _h[HighContrastSelector] = {\n                            borderColor: 'WindowText',\n                        },\n                        _h),\n                    _g[\":focus .\".concat(classNames.checkbox)] = {\n                        borderColor: checkboxBorderIndeterminateHoveredColor,\n                    },\n                    _g[\":hover .\".concat(classNames.checkmark)] = {\n                        opacity: '0',\n                    },\n                    _g),\n                (_j = {},\n                    _j[\":hover .\".concat(classNames.text, \", :focus .\").concat(classNames.text)] = (_k = {\n                            color: checkboxHoveredTextColor\n                        },\n                        _k[HighContrastSelector] = {\n                            color: disabled ? 'GrayText' : 'WindowText',\n                        },\n                        _k),\n                    _j),\n            ],\n            className,\n        ],\n        input: (_l = {\n                position: 'absolute',\n                background: 'none',\n                opacity: 0\n            },\n            // eslint-disable-next-line @fluentui/max-len\n            _l[\".\".concat(IsFocusVisibleClassName, \" &:focus + label::before, :host(.\").concat(IsFocusVisibleClassName, \") &:focus + label::before\")] = (_m = {\n                    outline: '1px solid ' + theme.palette.neutralSecondary,\n                    outlineOffset: '2px'\n                },\n                _m[HighContrastSelector] = {\n                    outline: '1px solid WindowText',\n                },\n                _m),\n            _l),\n        label: [\n            classNames.label,\n            theme.fonts.medium,\n            {\n                display: 'flex',\n                alignItems: isUsingCustomLabelRender ? 'center' : 'flex-start',\n                cursor: disabled ? 'default' : 'pointer',\n                position: 'relative',\n                userSelect: 'none',\n            },\n            reversed && {\n                flexDirection: 'row-reverse',\n                justifyContent: 'flex-end',\n            },\n            {\n                '&::before': {\n                    position: 'absolute',\n                    left: 0,\n                    right: 0,\n                    top: 0,\n                    bottom: 0,\n                    content: '\"\"',\n                    pointerEvents: 'none',\n                },\n            },\n        ],\n        checkbox: [\n            classNames.checkbox,\n            (_o = {\n                    position: 'relative',\n                    display: 'flex',\n                    flexShrink: 0,\n                    alignItems: 'center',\n                    justifyContent: 'center',\n                    height: MS_CHECKBOX_LABEL_SIZE,\n                    width: MS_CHECKBOX_LABEL_SIZE,\n                    border: \"1px solid \".concat(checkboxBorderColor),\n                    borderRadius: effects.roundedCorner2,\n                    boxSizing: 'border-box',\n                    transitionProperty: 'background, border, border-color',\n                    transitionDuration: MS_CHECKBOX_TRANSITION_DURATION,\n                    transitionTimingFunction: MS_CHECKBOX_TRANSITION_TIMING,\n                    /* in case the icon is bigger than the box */\n                    overflow: 'hidden',\n                    ':after': indeterminate ? indeterminateDotStyles : null\n                },\n                _o[HighContrastSelector] = __assign({ borderColor: 'WindowText' }, getHighContrastNoAdjustStyle()),\n                _o),\n            indeterminate && {\n                borderColor: checkboxBorderIndeterminateColor,\n            },\n            !reversed\n                ? // This margin on the checkbox is for backwards compat. Notably it has the effect where a customRender\n                    // is used, there will be only a 4px margin from checkbox to label. The label by default would have\n                    // another 4px margin for a total of 8px margin between checkbox and label. We don't combine the two\n                    // (and move it into the text) to not incur a breaking change for everyone using custom render atm.\n                    {\n                        marginRight: 4,\n                    }\n                : {\n                    marginLeft: 4,\n                },\n            !disabled &&\n                !indeterminate &&\n                checked && (_p = {\n                    background: checkboxBackgroundChecked,\n                    borderColor: checkboxBorderColorChecked\n                },\n                _p[HighContrastSelector] = {\n                    background: 'Highlight',\n                    borderColor: 'Highlight',\n                },\n                _p),\n            disabled && (_q = {\n                    borderColor: checkboxBorderColorDisabled\n                },\n                _q[HighContrastSelector] = {\n                    borderColor: 'GrayText',\n                },\n                _q),\n            checked &&\n                disabled && (_r = {\n                    background: checkboxBackgroundDisabledChecked,\n                    borderColor: checkboxBorderColorDisabled\n                },\n                _r[HighContrastSelector] = {\n                    background: 'Window',\n                },\n                _r),\n        ],\n        checkmark: [\n            classNames.checkmark,\n            (_s = {\n                    opacity: checked && !indeterminate ? '1' : '0',\n                    color: checkmarkFontColor\n                },\n                _s[HighContrastSelector] = __assign({ color: disabled ? 'GrayText' : 'Window' }, getHighContrastNoAdjustStyle()),\n                _s),\n        ],\n        text: [\n            classNames.text,\n            (_t = {\n                    color: disabled ? checkboxTextColorDisabled : checkboxTextColor,\n                    fontSize: fonts.medium.fontSize,\n                    lineHeight: '20px'\n                },\n                _t[HighContrastSelector] = __assign({ color: disabled ? 'GrayText' : 'WindowText' }, getHighContrastNoAdjustStyle()),\n                _t),\n            !reversed\n                ? {\n                    marginLeft: 4,\n                }\n                : {\n                    marginRight: 4,\n                },\n        ],\n    };\n};\n//# sourceMappingURL=Checkbox.styles.js.map"],"names":["GlobalClassNames","MS_CHECKBOX_LABEL_SIZE","MS_CHECKBOX_TRANSITION_DURATION","MS_CHECKBOX_TRANSITION_TIMING","getStyles","props","_a","_b","_c","_d","_e","_f","_g","_h","_j","_k","_l","_m","_o","_p","_q","_r","_s","_t","className","theme","reversed","checked","disabled","isUsingCustomLabelRender","indeterminate","semanticColors","effects","palette","fonts","classNames","getGlobalClassNames","checkmarkFontColor","checkmarkFontColorHovered","checkboxBorderColor","checkboxBorderIndeterminateColor","checkboxBorderColorChecked","checkboxBorderColorDisabled","checkboxBorderHoveredColor","checkboxBorderIndeterminateHoveredColor","checkboxBackgroundChecked","checkboxBackgroundCheckedHovered","checkboxBorderColorCheckedHovered","checkboxHoveredTextColor","checkboxBackgroundDisabledChecked","checkboxTextColor","checkboxTextColorDisabled","indeterminateDotStyles","HighContrastSelector","IsFocusVisibleClassName","__assign","getHighContrastNoAdjustStyle"],"mappings":"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","x_google_ignoreList":[0]}