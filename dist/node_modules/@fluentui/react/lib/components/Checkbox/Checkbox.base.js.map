{"version":3,"file":"Checkbox.base.js","sources":["../../../../../../../node_modules/@fluentui/react/lib/components/Checkbox/Checkbox.base.js"],"sourcesContent":["import { __assign } from \"tslib\";\nimport * as React from 'react';\nimport { useControllableValue, useId, useMergedRefs, useWarnings } from '@fluentui/react-hooks';\nimport { useFocusRects, classNamesFunction } from '@fluentui/utilities';\nimport { Icon } from '../Icon/Icon';\nvar getClassNames = classNamesFunction();\nexport var CheckboxBase = React.forwardRef(function (props, forwardedRef) {\n    var disabled = props.disabled, required = props.required, inputProps = props.inputProps, name = props.name, ariaLabel = props.ariaLabel, ariaLabelledBy = props.ariaLabelledBy, ariaDescribedBy = props.ariaDescribedBy, ariaPositionInSet = props.ariaPositionInSet, ariaSetSize = props.ariaSetSize, title = props.title, checkmarkIconProps = props.checkmarkIconProps, styles = props.styles, theme = props.theme, className = props.className, _a = props.boxSide, boxSide = _a === void 0 ? 'start' : _a;\n    var id = useId('checkbox-', props.id);\n    var rootRef = React.useRef(null);\n    var mergedRootRefs = useMergedRefs(rootRef, forwardedRef);\n    var inputRef = React.useRef(null);\n    var _b = useControllableValue(props.checked, props.defaultChecked, props.onChange), isChecked = _b[0], setIsChecked = _b[1];\n    var _c = useControllableValue(props.indeterminate, props.defaultIndeterminate), isIndeterminate = _c[0], setIsIndeterminate = _c[1];\n    useFocusRects(rootRef);\n    useDebugWarning(props);\n    var classNames = getClassNames(styles, {\n        theme: theme,\n        className: className,\n        disabled: disabled,\n        indeterminate: isIndeterminate,\n        checked: isChecked,\n        reversed: boxSide !== 'start',\n        isUsingCustomLabelRender: !!props.onRenderLabel,\n    });\n    var onChange = React.useCallback(function (event) {\n        if (isIndeterminate) {\n            // If indeterminate, clicking the checkbox *only* removes the indeterminate state (or if\n            // controlled, lets the consumer know to change it by calling onChange). It doesn't\n            // change the checked state.\n            setIsChecked(!!isChecked, event);\n            setIsIndeterminate(false);\n        }\n        else {\n            setIsChecked(!isChecked, event);\n        }\n    }, [setIsChecked, setIsIndeterminate, isIndeterminate, isChecked]);\n    var defaultLabelRenderer = React.useCallback(function (checkboxProps) {\n        if (!checkboxProps) {\n            return null;\n        }\n        return checkboxProps.label ? (React.createElement(\"span\", { className: classNames.text, title: checkboxProps.title }, checkboxProps.label)) : null;\n    }, [classNames.text]);\n    var setNativeIndeterminate = React.useCallback(function (indeterminate) {\n        if (!inputRef.current) {\n            return;\n        }\n        var value = !!indeterminate;\n        inputRef.current.indeterminate = value;\n        setIsIndeterminate(value);\n    }, [setIsIndeterminate]);\n    useComponentRef(props, isChecked, isIndeterminate, setNativeIndeterminate, inputRef);\n    React.useEffect(function () { return setNativeIndeterminate(isIndeterminate); }, [setNativeIndeterminate, isIndeterminate]);\n    var onRenderLabel = props.onRenderLabel || defaultLabelRenderer;\n    var ariaChecked = isIndeterminate\n        ? 'mixed'\n        : undefined;\n    var mergedInputProps = __assign(__assign({ className: classNames.input, type: 'checkbox' }, inputProps), { checked: !!isChecked, disabled: disabled, required: required, name: name, id: id, title: title, onChange: onChange, 'aria-disabled': disabled, 'aria-label': ariaLabel, 'aria-labelledby': ariaLabelledBy, 'aria-describedby': ariaDescribedBy, 'aria-posinset': ariaPositionInSet, 'aria-setsize': ariaSetSize, 'aria-checked': ariaChecked });\n    return (React.createElement(\"div\", { className: classNames.root, title: title, ref: mergedRootRefs },\n        React.createElement(\"input\", __assign({}, mergedInputProps, { ref: inputRef, title: title, \"data-ktp-execute-target\": true })),\n        React.createElement(\"label\", { className: classNames.label, htmlFor: id },\n            React.createElement(\"div\", { className: classNames.checkbox, \"data-ktp-target\": true },\n                React.createElement(Icon, __assign({ iconName: \"CheckMark\" }, checkmarkIconProps, { className: classNames.checkmark }))),\n            onRenderLabel(props, defaultLabelRenderer))));\n});\nCheckboxBase.displayName = 'CheckboxBase';\nfunction useDebugWarning(props) {\n    if (process.env.NODE_ENV !== 'production') {\n        // eslint-disable-next-line react-hooks/rules-of-hooks -- build-time conditional\n        useWarnings({\n            name: 'Checkbox',\n            props: props,\n            mutuallyExclusive: {\n                checked: 'defaultChecked',\n                indeterminate: 'defaultIndeterminate',\n            },\n        });\n    }\n}\nfunction useComponentRef(props, isChecked, isIndeterminate, setIndeterminate, checkBoxRef) {\n    React.useImperativeHandle(props.componentRef, function () { return ({\n        get checked() {\n            return !!isChecked;\n        },\n        get indeterminate() {\n            return !!isIndeterminate;\n        },\n        set indeterminate(indeterminate) {\n            setIndeterminate(indeterminate);\n        },\n        focus: function () {\n            if (checkBoxRef.current) {\n                checkBoxRef.current.focus();\n            }\n        },\n    }); }, [checkBoxRef, isChecked, isIndeterminate, setIndeterminate]);\n}\n//# sourceMappingURL=Checkbox.base.js.map"],"names":["getClassNames","classNamesFunction","CheckboxBase","React","props","forwardedRef","disabled","required","inputProps","name","ariaLabel","ariaLabelledBy","ariaDescribedBy","ariaPositionInSet","ariaSetSize","title","checkmarkIconProps","styles","theme","className","_a","boxSide","id","useId","rootRef","mergedRootRefs","useMergedRefs","inputRef","_b","useControllableValue","isChecked","setIsChecked","_c","isIndeterminate","setIsIndeterminate","useFocusRects","useDebugWarning","classNames","onChange","event","defaultLabelRenderer","checkboxProps","setNativeIndeterminate","indeterminate","value","useComponentRef","onRenderLabel","ariaChecked","mergedInputProps","__assign","Icon","useWarnings","setIndeterminate","checkBoxRef"],"mappings":"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","x_google_ignoreList":[0]}