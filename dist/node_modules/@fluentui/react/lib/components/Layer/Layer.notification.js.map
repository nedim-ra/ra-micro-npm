{"version":3,"file":"Layer.notification.js","sources":["../../../../../../../node_modules/@fluentui/react/lib/components/Layer/Layer.notification.js"],"sourcesContent":["var _layersByHostId = {};\nvar _layerHostsById = {};\nvar defaultHostId = 'fluent-default-layer-host';\nvar _defaultHostSelector = \"#\".concat(defaultHostId);\n/**\n * Register a layer for a given host id\n * @param hostId - Id of the layer host\n * @param layer - Layer instance\n */\nexport function registerLayer(hostId, callback) {\n    if (!_layersByHostId[hostId]) {\n        _layersByHostId[hostId] = [];\n    }\n    _layersByHostId[hostId].push(callback);\n    var layerHosts = _layerHostsById[hostId];\n    if (layerHosts) {\n        for (var _i = 0, layerHosts_1 = layerHosts; _i < layerHosts_1.length; _i++) {\n            var layerHost = layerHosts_1[_i];\n            layerHost.notifyLayersChanged();\n        }\n    }\n}\n/**\n * Unregister a layer for a given host id\n * @param hostId - Id of the layer host\n * @param layer - Layer instance\n */\nexport function unregisterLayer(hostId, callback) {\n    var layers = _layersByHostId[hostId];\n    if (layers) {\n        var idx = layers.indexOf(callback);\n        if (idx >= 0) {\n            layers.splice(idx, 1);\n            if (layers.length === 0) {\n                delete _layersByHostId[hostId];\n            }\n        }\n    }\n    var layerHosts = _layerHostsById[hostId];\n    if (layerHosts) {\n        for (var _i = 0, layerHosts_2 = layerHosts; _i < layerHosts_2.length; _i++) {\n            var layerHost = layerHosts_2[_i];\n            layerHost.notifyLayersChanged();\n        }\n    }\n}\n/**\n * Gets the number of layers currently registered with a host id.\n * @param hostId - Id of the layer host.\n * @returns The number of layers currently registered with the host.\n */\nexport function getLayerCount(hostId) {\n    var layers = _layerHostsById[hostId];\n    return layers ? layers.length : 0;\n}\n/**\n * Gets the Layer Host instance associated with a hostId, if applicable.\n * @param hostId - Id of the layer host\n * @returns A component ref for the associated layer host.\n */\nexport function getLayerHost(hostId) {\n    var layerHosts = _layerHostsById[hostId];\n    return (layerHosts && layerHosts[0]) || undefined;\n}\n/**\n * Registers a Layer Host with an associated hostId.\n * @param hostId - Id of the layer host\n * @param layerHost - layer host instance\n */\nexport function registerLayerHost(hostId, layerHost) {\n    var layerHosts = _layerHostsById[hostId] || (_layerHostsById[hostId] = []);\n    // Insert this at the start of an array to avoid race conditions between mount and unmount.\n    // If a LayerHost is re-mounted, and mount of the new instance may occur before the unmount of the old one.\n    // Putting the new instance at the start of this array ensures that calls to `getLayerHost` will immediately\n    // get the new one even if the old one is around briefly.\n    layerHosts.unshift(layerHost);\n}\n/**\n * Unregisters a Layer Host from the associated hostId.\n * @param hostId - Id of the layer host\n * @param layerHost - layer host instance\n */\nexport function unregisterLayerHost(hostId, layerHost) {\n    var layerHosts = _layerHostsById[hostId];\n    if (layerHosts) {\n        var idx = layerHosts.indexOf(layerHost);\n        if (idx >= 0) {\n            layerHosts.splice(idx, 1);\n        }\n        if (layerHosts.length === 0) {\n            delete _layerHostsById[hostId];\n        }\n    }\n}\n/**\n * When no default layer host is provided, this function is executed to create the default host.\n */\nexport function createDefaultLayerHost(doc, shadowRoot) {\n    if (shadowRoot === void 0) { shadowRoot = null; }\n    var host = doc.createElement('div');\n    host.setAttribute('id', defaultHostId);\n    host.style.cssText = 'position:fixed;z-index:1000000';\n    if (shadowRoot) {\n        shadowRoot.appendChild(host);\n    }\n    else {\n        doc === null || doc === void 0 ? void 0 : doc.body.appendChild(host);\n    }\n    // doc?.body.appendChild(host);\n    return host;\n}\n/**\n * This function can be optionally called to clean up the default layer host as needed.\n */\nexport function cleanupDefaultLayerHost(doc, shadowRoot) {\n    if (shadowRoot === void 0) { shadowRoot = null; }\n    var root = shadowRoot !== null && shadowRoot !== void 0 ? shadowRoot : doc;\n    var host = root.querySelector(\"#\".concat(defaultHostId));\n    if (host) {\n        root.removeChild(host);\n    }\n}\n/**\n * Used for notifying applicable Layers that a host is available/unavailable and to re-evaluate Layers that\n * care about the specific host.\n */\nexport function notifyHostChanged(id) {\n    if (_layersByHostId[id]) {\n        _layersByHostId[id].forEach(function (callback) { return callback(); });\n    }\n}\n/**\n * Sets the default target selector to use when determining the host in which\n * Layered content will be injected into. If not provided, an element will be\n * created at the end of the document body.\n *\n * Passing in a falsy value will clear the default target and reset back to\n * using a created element at the end of document body.\n */\nexport function setDefaultTarget(selector) {\n    _defaultHostSelector = selector;\n}\n/**\n * Get the default target selector when determining a host\n */\nexport function getDefaultTarget() {\n    return _defaultHostSelector;\n}\n//# sourceMappingURL=Layer.notification.js.map"],"names":["_layersByHostId","_layerHostsById","defaultHostId","_defaultHostSelector","registerLayer","hostId","callback","layerHosts","_i","layerHosts_1","layerHost","unregisterLayer","layers","idx","layerHosts_2","getLayerHost","createDefaultLayerHost","doc","shadowRoot","host","getDefaultTarget"],"mappings":"AAAA,IAAIA,IAAkB,CAAA,GAClBC,IAAkB,CAAA,GAClBC,IAAgB,6BAChBC,IAAuB,oBAAI,OAAOD,CAAa;AAM5C,SAASE,EAAcC,GAAQC,GAAU;AAC5C,EAAKN,EAAgBK,CAAM,MACvBL,EAAgBK,CAAM,IAAI,KAE9BL,EAAgBK,CAAM,EAAE,KAAKC,CAAQ;AACrC,MAAIC,IAAaN,EAAgBI,CAAM;AACvC,MAAIE;AACA,aAASC,IAAK,GAAGC,IAAeF,GAAYC,IAAKC,EAAa,QAAQD,KAAM;AACxE,UAAIE,IAAYD,EAAaD,CAAE;AAC/B,MAAAE,EAAU,oBAAmB;AAAA,IAChC;AAET;AAMO,SAASC,EAAgBN,GAAQC,GAAU;AAC9C,MAAIM,IAASZ,EAAgBK,CAAM;AACnC,MAAIO,GAAQ;AACR,QAAIC,IAAMD,EAAO,QAAQN,CAAQ;AACjC,IAAIO,KAAO,MACPD,EAAO,OAAOC,GAAK,CAAC,GAChBD,EAAO,WAAW,KAClB,OAAOZ,EAAgBK,CAAM;AAAA,EAGxC;AACD,MAAIE,IAAaN,EAAgBI,CAAM;AACvC,MAAIE;AACA,aAASC,IAAK,GAAGM,IAAeP,GAAYC,IAAKM,EAAa,QAAQN,KAAM;AACxE,UAAIE,IAAYI,EAAaN,CAAE;AAC/B,MAAAE,EAAU,oBAAmB;AAAA,IAChC;AAET;AAeO,SAASK,EAAaV,GAAQ;AACjC,MAAIE,IAAaN,EAAgBI,CAAM;AACvC,SAAQE,KAAcA,EAAW,CAAC,KAAM;AAC5C;AAkCO,SAASS,EAAuBC,GAAKC,GAAY;AACpD,EAAIA,MAAe,WAAUA,IAAa;AAC1C,MAAIC,IAAOF,EAAI,cAAc,KAAK;AAClC,SAAAE,EAAK,aAAa,MAAMjB,CAAa,GACrCiB,EAAK,MAAM,UAAU,kCACjBD,IACAA,EAAW,YAAYC,CAAI,IAG3BF,KAAQ,QAAkCA,EAAI,KAAK,YAAYE,CAAI,GAGhEA;AACX;AAmCO,SAASC,IAAmB;AAC/B,SAAOjB;AACX;","x_google_ignoreList":[0]}