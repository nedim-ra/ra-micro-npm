import { __extends as I, __assign as f } from "../../../../../tslib/tslib.es6.js";
import * as s from "react";
import { hasSubmenu as c, getIsChecked as v } from "../../utilities/contextualMenu/contextualMenuUtility.js";
import { initializeComponentRef as h } from "../../../../utilities/lib/initializeComponentRef.js";
import { getRTL as N } from "../../../../utilities/lib/rtl.js";
import { Icon as o } from "../Icon/Icon.js";
var d = function(e) {
  var r = e.item, n = e.classNames, t = r.iconProps;
  return s.createElement(o, f({}, t, { className: n.icon }));
}, k = function(e) {
  var r = e.item, n = e.hasIcons;
  return n ? r.onRenderIcon ? r.onRenderIcon(e, d) : d(e) : null;
}, C = function(e) {
  var r = e.onCheckmarkClick, n = e.item, t = e.classNames, a = v(n);
  if (r) {
    var m = function(i) {
      return r(n, i);
    };
    return s.createElement(o, {
      iconName: n.canCheck !== !1 && a ? "CheckMark" : "",
      className: t.checkmarkIcon,
      // eslint-disable-next-line react/jsx-no-bind
      onClick: m
    });
  }
  return null;
}, M = function(e) {
  var r = e.item, n = e.classNames;
  return r.text || r.name ? s.createElement("span", { className: n.label }, r.text || r.name) : null;
}, p = function(e) {
  var r = e.item, n = e.classNames;
  return r.secondaryText ? s.createElement("span", { className: n.secondaryText }, r.secondaryText) : null;
}, S = function(e) {
  var r = e.item, n = e.classNames, t = e.theme;
  return c(r) ? s.createElement(o, f({ iconName: N(t) ? "ChevronLeft" : "ChevronRight" }, r.submenuIconProps, { className: n.subMenuIcon })) : null;
}, E = (
  /** @class */
  /* @__PURE__ */ function(e) {
    I(r, e);
    function r(n) {
      var t = e.call(this, n) || this;
      return t.openSubMenu = function() {
        var a = t.props, m = a.item, i = a.openSubMenu, u = a.getSubmenuTarget;
        if (u) {
          var l = u();
          c(m) && i && l && i(m, l);
        }
      }, t.dismissSubMenu = function() {
        var a = t.props, m = a.item, i = a.dismissSubMenu;
        c(m) && i && i();
      }, t.dismissMenu = function(a) {
        var m = t.props.dismissMenu;
        m && m(void 0, a);
      }, h(t), t;
    }
    return r.prototype.render = function() {
      var n = this.props, t = n.item, a = n.classNames, m = t.onRenderContent || this._renderLayout;
      return s.createElement("div", { className: t.split ? a.linkContentMenu : a.linkContent }, m(this.props, {
        renderCheckMarkIcon: C,
        renderItemIcon: k,
        renderItemName: M,
        renderSecondaryText: p,
        renderSubMenuIcon: S
      }));
    }, r.prototype._renderLayout = function(n, t) {
      return s.createElement(
        s.Fragment,
        null,
        t.renderCheckMarkIcon(n),
        t.renderItemIcon(n),
        t.renderItemName(n),
        t.renderSecondaryText(n),
        t.renderSubMenuIcon(n)
      );
    }, r;
  }(s.Component)
);
export {
  E as ContextualMenuItemBase
};
//# sourceMappingURL=ContextualMenuItem.base.js.map
