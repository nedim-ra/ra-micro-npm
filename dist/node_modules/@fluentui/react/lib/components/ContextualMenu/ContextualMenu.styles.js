import { CONTEXTUAL_MENU_ITEM_HEIGHT as s } from "./ContextualMenu.cnstyles.js";
import { getGlobalClassNames as l } from "../../../../style-utilities/lib/styles/getGlobalClassNames.js";
import "../../../../style-utilities/lib/index.js";
import { FontWeights as m } from "../../../../theme/lib/fonts/FluentFonts.js";
var u = {
  root: "ms-ContextualMenu",
  container: "ms-ContextualMenu-container",
  list: "ms-ContextualMenu-list",
  header: "ms-ContextualMenu-header",
  title: "ms-ContextualMenu-title",
  isopen: "is-open"
}, f = function(n) {
  var r = n.className, t = n.theme, e = l(u, t), a = t.fonts, o = t.semanticColors, i = t.effects;
  return {
    root: [
      t.fonts.medium,
      e.root,
      e.isopen,
      {
        backgroundColor: o.menuBackground,
        minWidth: "180px"
      },
      r
    ],
    container: [
      e.container,
      {
        selectors: {
          ":focus": { outline: 0 }
        }
      }
    ],
    list: [
      e.list,
      e.isopen,
      {
        listStyleType: "none",
        margin: "0",
        padding: "0"
      }
    ],
    header: [
      e.header,
      a.small,
      {
        fontWeight: m.semibold,
        color: o.menuHeader,
        background: "none",
        backgroundColor: "transparent",
        border: "none",
        height: s,
        lineHeight: s,
        cursor: "default",
        padding: "0px 6px",
        userSelect: "none",
        textAlign: "left"
      }
    ],
    title: [
      e.title,
      {
        fontSize: a.mediumPlus.fontSize,
        paddingRight: "14px",
        paddingLeft: "14px",
        paddingBottom: "5px",
        paddingTop: "5px",
        backgroundColor: o.menuItemBackgroundPressed
      }
    ],
    subComponentStyles: {
      callout: {
        root: {
          boxShadow: i.elevation8
        }
      },
      menuItem: {}
    }
  };
};
export {
  f as getStyles
};
//# sourceMappingURL=ContextualMenu.styles.js.map
