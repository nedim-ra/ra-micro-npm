import { __extends as K, __assign as u } from "../../../../../../tslib/tslib.es6.js";
import * as r from "react";
import { ContextualMenuItemWrapper as R } from "./ContextualMenuItemWrapper.js";
import { ContextualMenuItem as N } from "../ContextualMenuItem.js";
import { memoizeFunction as B } from "../../../../../utilities/lib/memoize.js";
import { composeComponentAs as M } from "../../../../../utilities/lib/componentAs/composeComponentAs.js";
import { getNativeProps as w, anchorProperties as z } from "../../../../../utilities/lib/properties.js";
import { hasSubmenu as T, isItemDisabled as b } from "../../../utilities/contextualMenu/contextualMenuUtility.js";
import { getId as L } from "../../../../../utilities/lib/getId.js";
import { mergeAriaAttributeValues as F } from "../../../../../utilities/lib/aria.js";
import { KeytipData as H } from "../../KeytipData/KeytipData.js";
var Y = (
  /** @class */
  /* @__PURE__ */ function(p) {
    K(c, p);
    function c() {
      var t = p !== null && p.apply(this, arguments) || this;
      return t._anchor = r.createRef(), t._getMemoizedMenuButtonKeytipProps = B(function(n) {
        return u(u({}, n), { hasMenu: !0 });
      }), t._getSubmenuTarget = function() {
        return t._anchor.current ? t._anchor.current : void 0;
      }, t._onItemClick = function(n) {
        var e = t.props, i = e.item, a = e.onItemClick;
        a && a(i, n);
      }, t._renderAriaDescription = function(n, e) {
        return n ? r.createElement("span", { id: t._ariaDescriptionId, className: e }, n) : null;
      }, t;
    }
    return c.prototype.render = function() {
      var t = this, n = this.props, e = n.item, i = n.classNames, a = n.index, _ = n.focusableElementIndex, v = n.totalItemCount, y = n.hasCheckmarks, k = n.hasIcons, C = n.expandedMenuItemKey, f = n.onItemClick, x = n.openSubMenu, g = n.dismissSubMenu, D = n.dismissMenu, o = N;
      this.props.item.contextualMenuItemAs && (o = M(this.props.item.contextualMenuItemAs, o)), this.props.contextualMenuItemAs && (o = M(this.props.contextualMenuItemAs, o));
      var s = e.rel;
      e.target && e.target.toLowerCase() === "_blank" && (s = s || "nofollow noopener noreferrer");
      var m = T(e), h = w(e, z), P = b(e), A = e.itemProps, d = e.ariaDescription, l = e.keytipProps;
      l && m && (l = this._getMemoizedMenuButtonKeytipProps(l)), d && (this._ariaDescriptionId = L());
      var I = F(e.ariaDescribedBy, d ? this._ariaDescriptionId : void 0, h["aria-describedby"]), S = {
        "aria-describedby": I
      };
      return r.createElement(
        "div",
        null,
        r.createElement(H, { keytipProps: e.keytipProps, ariaDescribedBy: I, disabled: P }, function(E) {
          return r.createElement(
            "a",
            u({}, S, h, E, {
              ref: t._anchor,
              href: e.href,
              target: e.target,
              rel: s,
              className: i.root,
              role: "menuitem",
              "aria-haspopup": m || void 0,
              "aria-expanded": m ? e.key === C : void 0,
              "aria-posinset": _ + 1,
              "aria-setsize": v,
              "aria-disabled": b(e),
              // eslint-disable-next-line deprecation/deprecation
              style: e.style,
              onClick: t._onItemClick,
              onMouseEnter: t._onItemMouseEnter,
              onMouseLeave: t._onItemMouseLeave,
              onMouseMove: t._onItemMouseMove,
              onKeyDown: m ? t._onItemKeyDown : void 0
            }),
            r.createElement(o, u({ componentRef: e.componentRef, item: e, classNames: i, index: a, onCheckmarkClick: y && f ? f : void 0, hasIcons: k, openSubMenu: x, dismissSubMenu: g, dismissMenu: D, getSubmenuTarget: t._getSubmenuTarget }, A)),
            t._renderAriaDescription(d, i.screenReaderText)
          );
        })
      );
    }, c;
  }(R)
);
export {
  Y as ContextualMenuAnchor
};
//# sourceMappingURL=ContextualMenuAnchor.js.map
