{"version":3,"file":"ContextualMenuButton.js","sources":["../../../../../../../../node_modules/@fluentui/react/lib/components/ContextualMenu/ContextualMenuItemWrapper/ContextualMenuButton.js"],"sourcesContent":["import { __assign, __extends } from \"tslib\";\nimport * as React from 'react';\nimport { buttonProperties, getNativeProps, memoizeFunction, getId, mergeAriaAttributeValues, composeComponentAs, } from '../../../Utilities';\nimport { ContextualMenuItemWrapper } from './ContextualMenuItemWrapper';\nimport { KeytipData } from '../../../KeytipData';\nimport { getIsChecked, isItemDisabled, hasSubmenu, getMenuItemAriaRole } from '../../../utilities/contextualMenu/index';\nimport { ContextualMenuItem } from '../ContextualMenuItem';\nvar ContextualMenuButton = /** @class */ (function (_super) {\n    __extends(ContextualMenuButton, _super);\n    function ContextualMenuButton() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this._btn = React.createRef();\n        _this._getMemoizedMenuButtonKeytipProps = memoizeFunction(function (keytipProps) {\n            return __assign(__assign({}, keytipProps), { hasMenu: true });\n        });\n        _this._renderAriaDescription = function (ariaDescription, className) {\n            // If ariaDescription is given, descriptionId will be assigned to ariaDescriptionSpan\n            return ariaDescription ? (React.createElement(\"span\", { id: _this._ariaDescriptionId, className: className }, ariaDescription)) : null;\n        };\n        _this._getSubmenuTarget = function () {\n            return _this._btn.current ? _this._btn.current : undefined;\n        };\n        return _this;\n    }\n    ContextualMenuButton.prototype.render = function () {\n        var _this = this;\n        var _a = this.props, item = _a.item, classNames = _a.classNames, index = _a.index, focusableElementIndex = _a.focusableElementIndex, totalItemCount = _a.totalItemCount, hasCheckmarks = _a.hasCheckmarks, hasIcons = _a.hasIcons, contextualMenuItemAs = _a.contextualMenuItemAs, expandedMenuItemKey = _a.expandedMenuItemKey, onItemMouseDown = _a.onItemMouseDown, onItemClick = _a.onItemClick, openSubMenu = _a.openSubMenu, dismissSubMenu = _a.dismissSubMenu, dismissMenu = _a.dismissMenu;\n        var ChildrenRenderer = ContextualMenuItem;\n        if (item.contextualMenuItemAs) {\n            ChildrenRenderer = composeComponentAs(item.contextualMenuItemAs, ChildrenRenderer);\n        }\n        if (contextualMenuItemAs) {\n            ChildrenRenderer = composeComponentAs(contextualMenuItemAs, ChildrenRenderer);\n        }\n        var isChecked = getIsChecked(item);\n        var canCheck = isChecked !== null;\n        var defaultRole = getMenuItemAriaRole(item);\n        var itemHasSubmenu = hasSubmenu(item);\n        var itemProps = item.itemProps, ariaLabel = item.ariaLabel, ariaDescription = item.ariaDescription;\n        var buttonNativeProperties = getNativeProps(item, buttonProperties);\n        // Do not add the disabled attribute to the button so that it is focusable\n        delete buttonNativeProperties.disabled;\n        var itemRole = item.role || defaultRole;\n        // Check for ariaDescription to set the _ariaDescriptionId and render a hidden span with\n        // the description in it to be added to ariaDescribedBy\n        if (ariaDescription) {\n            this._ariaDescriptionId = getId();\n        }\n        var ariaDescribedByIds = mergeAriaAttributeValues(item.ariaDescribedBy, ariaDescription ? this._ariaDescriptionId : undefined, buttonNativeProperties['aria-describedby']);\n        var itemButtonProperties = {\n            className: classNames.root,\n            onClick: this._onItemClick,\n            onKeyDown: itemHasSubmenu ? this._onItemKeyDown : undefined,\n            onMouseEnter: this._onItemMouseEnter,\n            onMouseLeave: this._onItemMouseLeave,\n            onMouseDown: function (ev) {\n                return onItemMouseDown ? onItemMouseDown(item, ev) : undefined;\n            },\n            onMouseMove: this._onItemMouseMove,\n            href: item.href,\n            title: item.title,\n            'aria-label': ariaLabel,\n            'aria-describedby': ariaDescribedByIds,\n            'aria-haspopup': itemHasSubmenu || undefined,\n            'aria-expanded': itemHasSubmenu ? item.key === expandedMenuItemKey : undefined,\n            'aria-posinset': focusableElementIndex + 1,\n            'aria-setsize': totalItemCount,\n            'aria-disabled': isItemDisabled(item),\n            'aria-checked': (itemRole === 'menuitemcheckbox' || itemRole === 'menuitemradio') && canCheck ? !!isChecked : undefined,\n            'aria-selected': itemRole === 'menuitem' && canCheck ? !!isChecked : undefined,\n            role: itemRole,\n            // eslint-disable-next-line deprecation/deprecation\n            style: item.style,\n        };\n        var keytipProps = item.keytipProps;\n        if (keytipProps && itemHasSubmenu) {\n            keytipProps = this._getMemoizedMenuButtonKeytipProps(keytipProps);\n        }\n        return (React.createElement(KeytipData, { keytipProps: keytipProps, ariaDescribedBy: ariaDescribedByIds, disabled: isItemDisabled(item) }, function (keytipAttributes) { return (React.createElement(\"button\", __assign({ ref: _this._btn }, buttonNativeProperties, itemButtonProperties, keytipAttributes),\n            React.createElement(ChildrenRenderer, __assign({ componentRef: item.componentRef, item: item, classNames: classNames, index: index, onCheckmarkClick: hasCheckmarks && onItemClick ? onItemClick : undefined, hasIcons: hasIcons, openSubMenu: openSubMenu, dismissSubMenu: dismissSubMenu, dismissMenu: dismissMenu, getSubmenuTarget: _this._getSubmenuTarget }, itemProps)),\n            _this._renderAriaDescription(ariaDescription, classNames.screenReaderText))); }));\n    };\n    return ContextualMenuButton;\n}(ContextualMenuItemWrapper));\nexport { ContextualMenuButton };\n//# sourceMappingURL=ContextualMenuButton.js.map"],"names":["ContextualMenuButton","_super","__extends","_this","React","memoizeFunction","keytipProps","__assign","ariaDescription","className","_a","item","classNames","index","focusableElementIndex","totalItemCount","hasCheckmarks","hasIcons","contextualMenuItemAs","expandedMenuItemKey","onItemMouseDown","onItemClick","openSubMenu","dismissSubMenu","dismissMenu","ChildrenRenderer","ContextualMenuItem","composeComponentAs","isChecked","getIsChecked","canCheck","defaultRole","getMenuItemAriaRole","itemHasSubmenu","hasSubmenu","itemProps","ariaLabel","buttonNativeProperties","getNativeProps","buttonProperties","itemRole","getId","ariaDescribedByIds","mergeAriaAttributeValues","itemButtonProperties","ev","isItemDisabled","KeytipData","keytipAttributes","ContextualMenuItemWrapper"],"mappings":"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","x_google_ignoreList":[0]}