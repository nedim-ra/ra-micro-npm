{"version":3,"file":"ContextualMenu.js","sources":["../../../../../../../node_modules/@fluentui/react/lib/components/ContextualMenu/ContextualMenu.js"],"sourcesContent":["import { __assign } from \"tslib\";\nimport * as React from 'react';\nimport { styled, composeRenderFunction } from '../../Utilities';\nimport { ContextualMenuBase } from './ContextualMenu.base';\nimport { getStyles } from './ContextualMenu.styles';\nfunction onRenderSubMenu(subMenuProps) {\n    return React.createElement(LocalContextualMenu, __assign({}, subMenuProps));\n}\n// This is to prevent cyclic import with ContextualMenu.base.tsx.\nvar LocalContextualMenu = styled(ContextualMenuBase, getStyles, function (props) { return ({\n    onRenderSubMenu: props.onRenderSubMenu\n        ? composeRenderFunction(props.onRenderSubMenu, onRenderSubMenu)\n        : onRenderSubMenu,\n}); }, { scope: 'ContextualMenu' });\n/**\n * ContextualMenu description\n */\nexport var ContextualMenu = LocalContextualMenu;\nContextualMenu.displayName = 'ContextualMenu';\n//# sourceMappingURL=ContextualMenu.js.map"],"names":["onRenderSubMenu","subMenuProps","React","LocalContextualMenu","__assign","styled","ContextualMenuBase","getStyles","props","composeRenderFunction","ContextualMenu"],"mappings":";;;;;;AAKA,SAASA,EAAgBC,GAAc;AACnC,SAAOC,EAAM,cAAcC,GAAqBC,EAAS,CAAE,GAAEH,CAAY,CAAC;AAC9E;AAEA,IAAIE,IAAsB,gBAAAE,EAAOC,GAAoBC,GAAW,SAAUC,GAAO;AAAE,SAAQ;AAAA,IACvF,iBAAiBA,EAAM,kBACjBC,EAAsBD,EAAM,iBAAiBR,CAAe,IAC5DA;AAAA,EACV;GAAO,EAAE,OAAO,iBAAkB,CAAA,GAIvBU,IAAiBP;AAC5BO,EAAe,cAAc;","x_google_ignoreList":[0]}