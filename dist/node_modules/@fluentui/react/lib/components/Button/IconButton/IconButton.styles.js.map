{"version":3,"file":"IconButton.styles.js","sources":["../../../../../../../../node_modules/@fluentui/react/lib/components/Button/IconButton/IconButton.styles.js"],"sourcesContent":["import { concatStyleSets, HighContrastSelector } from '../../../Styling';\nimport { memoizeFunction } from '../../../Utilities';\nimport { getStyles as getBaseButtonStyles } from '../BaseButton.styles';\nimport { getStyles as getSplitButtonStyles } from '../SplitButton/SplitButton.styles';\nexport var getStyles = memoizeFunction(function (theme, customStyles) {\n    var _a;\n    var baseButtonStyles = getBaseButtonStyles(theme);\n    var splitButtonStyles = getSplitButtonStyles(theme);\n    var palette = theme.palette, semanticColors = theme.semanticColors;\n    var iconButtonStyles = {\n        root: {\n            padding: '0 4px',\n            width: '32px',\n            height: '32px',\n            backgroundColor: 'transparent',\n            border: 'none',\n            color: semanticColors.link,\n        },\n        rootHovered: (_a = {\n                color: palette.themeDarkAlt,\n                backgroundColor: palette.neutralLighter\n            },\n            _a[HighContrastSelector] = {\n                borderColor: 'Highlight',\n                color: 'Highlight',\n            },\n            _a),\n        rootHasMenu: {\n            width: 'auto',\n        },\n        rootPressed: {\n            color: palette.themeDark,\n            backgroundColor: palette.neutralLight,\n        },\n        rootExpanded: {\n            color: palette.themeDark,\n            backgroundColor: palette.neutralLight,\n        },\n        rootChecked: {\n            color: palette.themeDark,\n            backgroundColor: palette.neutralLight,\n        },\n        rootCheckedHovered: {\n            color: palette.themeDark,\n            backgroundColor: palette.neutralQuaternaryAlt,\n        },\n        rootDisabled: {\n            color: palette.neutralTertiaryAlt,\n        },\n    };\n    return concatStyleSets(baseButtonStyles, iconButtonStyles, splitButtonStyles, customStyles);\n});\n//# sourceMappingURL=IconButton.styles.js.map"],"names":["getStyles","memoizeFunction","theme","customStyles","_a","baseButtonStyles","getBaseButtonStyles","splitButtonStyles","getSplitButtonStyles","palette","semanticColors","iconButtonStyles","HighContrastSelector","concatStyleSets"],"mappings":";;;;;;AAIU,IAACA,IAAY,gBAAAC,EAAgB,SAAUC,GAAOC,GAAc;AAClE,MAAIC,GACAC,IAAmBC,EAAoBJ,CAAK,GAC5CK,IAAoBC,EAAqBN,CAAK,GAC9CO,IAAUP,EAAM,SAASQ,IAAiBR,EAAM,gBAChDS,IAAmB;AAAA,IACnB,MAAM;AAAA,MACF,SAAS;AAAA,MACT,OAAO;AAAA,MACP,QAAQ;AAAA,MACR,iBAAiB;AAAA,MACjB,QAAQ;AAAA,MACR,OAAOD,EAAe;AAAA,IACzB;AAAA,IACD,cAAcN,IAAK;AAAA,MACX,OAAOK,EAAQ;AAAA,MACf,iBAAiBA,EAAQ;AAAA,IAC5B,GACDL,EAAGQ,CAAoB,IAAI;AAAA,MACvB,aAAa;AAAA,MACb,OAAO;AAAA,IACV,GACDR;AAAA,IACJ,aAAa;AAAA,MACT,OAAO;AAAA,IACV;AAAA,IACD,aAAa;AAAA,MACT,OAAOK,EAAQ;AAAA,MACf,iBAAiBA,EAAQ;AAAA,IAC5B;AAAA,IACD,cAAc;AAAA,MACV,OAAOA,EAAQ;AAAA,MACf,iBAAiBA,EAAQ;AAAA,IAC5B;AAAA,IACD,aAAa;AAAA,MACT,OAAOA,EAAQ;AAAA,MACf,iBAAiBA,EAAQ;AAAA,IAC5B;AAAA,IACD,oBAAoB;AAAA,MAChB,OAAOA,EAAQ;AAAA,MACf,iBAAiBA,EAAQ;AAAA,IAC5B;AAAA,IACD,cAAc;AAAA,MACV,OAAOA,EAAQ;AAAA,IAClB;AAAA,EACT;AACI,SAAOI,EAAgBR,GAAkBM,GAAkBJ,GAAmBJ,CAAY;AAC9F,CAAC;","x_google_ignoreList":[0]}