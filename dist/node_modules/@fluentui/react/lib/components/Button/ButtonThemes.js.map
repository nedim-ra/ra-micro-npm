{"version":3,"file":"ButtonThemes.js","sources":["../../../../../../../node_modules/@fluentui/react/lib/components/Button/ButtonThemes.js"],"sourcesContent":["import { __assign } from \"tslib\";\nimport { HighContrastSelector, getHighContrastNoAdjustStyle } from '../../Styling';\nimport { IsFocusVisibleClassName } from '../../Utilities';\nvar splitButtonDividerBaseStyles = function () {\n    return {\n        position: 'absolute',\n        width: 1,\n        right: 31,\n        top: 8,\n        bottom: 8,\n    };\n};\nexport function standardStyles(theme) {\n    var _a, _b, _c, _d, _e;\n    var s = theme.semanticColors, p = theme.palette;\n    var buttonBackground = s.buttonBackground;\n    var buttonBackgroundPressed = s.buttonBackgroundPressed;\n    var buttonBackgroundHovered = s.buttonBackgroundHovered;\n    var buttonBackgroundDisabled = s.buttonBackgroundDisabled;\n    var buttonText = s.buttonText;\n    var buttonTextHovered = s.buttonTextHovered;\n    var buttonTextDisabled = s.buttonTextDisabled;\n    var buttonTextChecked = s.buttonTextChecked;\n    var buttonTextCheckedHovered = s.buttonTextCheckedHovered;\n    return {\n        root: {\n            backgroundColor: buttonBackground,\n            color: buttonText,\n        },\n        rootHovered: (_a = {\n                backgroundColor: buttonBackgroundHovered,\n                color: buttonTextHovered\n            },\n            _a[HighContrastSelector] = {\n                borderColor: 'Highlight',\n                color: 'Highlight',\n            },\n            _a),\n        rootPressed: {\n            backgroundColor: buttonBackgroundPressed,\n            color: buttonTextChecked,\n        },\n        rootExpanded: {\n            backgroundColor: buttonBackgroundPressed,\n            color: buttonTextChecked,\n        },\n        rootChecked: {\n            backgroundColor: buttonBackgroundPressed,\n            color: buttonTextChecked,\n        },\n        rootCheckedHovered: {\n            backgroundColor: buttonBackgroundPressed,\n            color: buttonTextCheckedHovered,\n        },\n        rootDisabled: (_b = {\n                color: buttonTextDisabled,\n                backgroundColor: buttonBackgroundDisabled\n            },\n            _b[HighContrastSelector] = {\n                color: 'GrayText',\n                borderColor: 'GrayText',\n                backgroundColor: 'Window',\n            },\n            _b),\n        // Split button styles\n        splitButtonContainer: (_c = {},\n            _c[HighContrastSelector] = {\n                border: 'none',\n            },\n            _c),\n        splitButtonMenuButton: {\n            color: p.white,\n            backgroundColor: 'transparent',\n            ':hover': (_d = {\n                    backgroundColor: p.neutralLight\n                },\n                _d[HighContrastSelector] = {\n                    color: 'Highlight',\n                },\n                _d),\n        },\n        splitButtonMenuButtonDisabled: {\n            backgroundColor: s.buttonBackgroundDisabled,\n            ':hover': {\n                backgroundColor: s.buttonBackgroundDisabled,\n            },\n        },\n        splitButtonDivider: __assign(__assign({}, splitButtonDividerBaseStyles()), (_e = { backgroundColor: p.neutralTertiaryAlt }, _e[HighContrastSelector] = {\n            backgroundColor: 'WindowText',\n        }, _e)),\n        splitButtonDividerDisabled: {\n            backgroundColor: theme.palette.neutralTertiaryAlt,\n        },\n        splitButtonMenuButtonChecked: {\n            backgroundColor: p.neutralQuaternaryAlt,\n            ':hover': {\n                backgroundColor: p.neutralQuaternaryAlt,\n            },\n        },\n        splitButtonMenuButtonExpanded: {\n            backgroundColor: p.neutralQuaternaryAlt,\n            ':hover': {\n                backgroundColor: p.neutralQuaternaryAlt,\n            },\n        },\n        splitButtonMenuIcon: {\n            color: s.buttonText,\n        },\n        splitButtonMenuIconDisabled: {\n            color: s.buttonTextDisabled,\n        },\n    };\n}\nexport function primaryStyles(theme) {\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j;\n    var p = theme.palette, s = theme.semanticColors;\n    return {\n        root: (_a = {\n                backgroundColor: s.primaryButtonBackground,\n                border: \"1px solid \".concat(s.primaryButtonBackground),\n                color: s.primaryButtonText\n            },\n            _a[HighContrastSelector] = __assign({ color: 'Window', backgroundColor: 'WindowText', borderColor: 'WindowText' }, getHighContrastNoAdjustStyle()),\n            _a[\".\".concat(IsFocusVisibleClassName, \" &:focus, :host(.\").concat(IsFocusVisibleClassName, \") &:focus\")] = {\n                ':after': {\n                    border: \"none\",\n                    outlineColor: p.white,\n                },\n            },\n            _a),\n        rootHovered: (_b = {\n                backgroundColor: s.primaryButtonBackgroundHovered,\n                border: \"1px solid \".concat(s.primaryButtonBackgroundHovered),\n                color: s.primaryButtonTextHovered\n            },\n            _b[HighContrastSelector] = {\n                color: 'Window',\n                backgroundColor: 'Highlight',\n                borderColor: 'Highlight',\n            },\n            _b),\n        rootPressed: (_c = {\n                backgroundColor: s.primaryButtonBackgroundPressed,\n                border: \"1px solid \".concat(s.primaryButtonBackgroundPressed),\n                color: s.primaryButtonTextPressed\n            },\n            _c[HighContrastSelector] = __assign({ color: 'Window', backgroundColor: 'WindowText', borderColor: 'WindowText' }, getHighContrastNoAdjustStyle()),\n            _c),\n        rootExpanded: {\n            backgroundColor: s.primaryButtonBackgroundPressed,\n            color: s.primaryButtonTextPressed,\n        },\n        rootChecked: {\n            backgroundColor: s.primaryButtonBackgroundPressed,\n            color: s.primaryButtonTextPressed,\n        },\n        rootCheckedHovered: {\n            backgroundColor: s.primaryButtonBackgroundPressed,\n            color: s.primaryButtonTextPressed,\n        },\n        rootDisabled: (_d = {\n                color: s.primaryButtonTextDisabled,\n                backgroundColor: s.primaryButtonBackgroundDisabled\n            },\n            _d[HighContrastSelector] = {\n                color: 'GrayText',\n                borderColor: 'GrayText',\n                backgroundColor: 'Window',\n            },\n            _d),\n        // Split button styles\n        splitButtonContainer: (_e = {},\n            _e[HighContrastSelector] = {\n                border: 'none',\n            },\n            _e),\n        splitButtonDivider: __assign(__assign({}, splitButtonDividerBaseStyles()), (_f = { backgroundColor: p.white }, _f[HighContrastSelector] = {\n            backgroundColor: 'Window',\n        }, _f)),\n        splitButtonMenuButton: (_g = {\n                backgroundColor: s.primaryButtonBackground,\n                color: s.primaryButtonText\n            },\n            _g[HighContrastSelector] = {\n                backgroundColor: 'Canvas',\n            },\n            _g[':hover'] = (_h = {\n                    backgroundColor: s.primaryButtonBackgroundHovered\n                },\n                _h[HighContrastSelector] = {\n                    color: 'Highlight',\n                },\n                _h),\n            _g),\n        splitButtonMenuButtonDisabled: {\n            backgroundColor: s.primaryButtonBackgroundDisabled,\n            ':hover': {\n                backgroundColor: s.primaryButtonBackgroundDisabled,\n            },\n        },\n        splitButtonMenuButtonChecked: {\n            backgroundColor: s.primaryButtonBackgroundPressed,\n            ':hover': {\n                backgroundColor: s.primaryButtonBackgroundPressed,\n            },\n        },\n        splitButtonMenuButtonExpanded: {\n            backgroundColor: s.primaryButtonBackgroundPressed,\n            ':hover': {\n                backgroundColor: s.primaryButtonBackgroundPressed,\n            },\n        },\n        splitButtonMenuIcon: {\n            color: s.primaryButtonText,\n        },\n        splitButtonMenuIconDisabled: (_j = {\n                color: p.neutralTertiary\n            },\n            _j[HighContrastSelector] = {\n                color: 'GrayText',\n            },\n            _j),\n    };\n}\n//# sourceMappingURL=ButtonThemes.js.map"],"names":["splitButtonDividerBaseStyles","standardStyles","theme","_a","_b","_c","_d","_e","s","p","buttonBackground","buttonBackgroundPressed","buttonBackgroundHovered","buttonBackgroundDisabled","buttonText","buttonTextHovered","buttonTextDisabled","buttonTextChecked","buttonTextCheckedHovered","HighContrastSelector","__assign","primaryStyles","_f","_g","_h","_j","getHighContrastNoAdjustStyle","IsFocusVisibleClassName"],"mappings":"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","x_google_ignoreList":[0]}