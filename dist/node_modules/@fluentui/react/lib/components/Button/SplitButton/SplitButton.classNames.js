import { memoizeFunction as B } from "../../../../../utilities/lib/memoize.js";
import { mergeStyles as o } from "../../../../../merge-styles/lib/mergeStyles.js";
import "../../../../../style-utilities/lib/index.js";
var p = {
  msSplitButtonDivider: "ms-SplitButton-divider"
}, m = /* @__PURE__ */ B(function(t, n, r, i, u) {
  return {
    root: o(t.splitButtonMenuButton, r && [t.splitButtonMenuButtonExpanded], n && [t.splitButtonMenuButtonDisabled], i && !n && [t.splitButtonMenuButtonChecked], u && !n && [
      {
        ":focus": t.splitButtonMenuFocused
      }
    ]),
    splitButtonContainer: o(t.splitButtonContainer, !n && i && [
      t.splitButtonContainerChecked,
      {
        ":hover": t.splitButtonContainerCheckedHovered
      }
    ], !n && !i && [
      {
        ":hover": t.splitButtonContainerHovered,
        ":focus": t.splitButtonContainerFocused
      }
    ], n && t.splitButtonContainerDisabled),
    icon: o(t.splitButtonMenuIcon, n && t.splitButtonMenuIconDisabled, !n && u && t.splitButtonMenuIcon),
    flexContainer: o(t.splitButtonFlexContainer),
    divider: o(p.msSplitButtonDivider, t.splitButtonDivider, (u || n) && t.splitButtonDividerDisabled)
  };
});
export {
  p as SplitButtonGlobalClassNames,
  m as getSplitButtonClassNames
};
//# sourceMappingURL=SplitButton.classNames.js.map
