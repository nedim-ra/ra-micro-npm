{"version":3,"file":"WindowProvider.js","sources":["../../../../../node_modules/@fluentui/react-window-provider/lib/WindowProvider.js"],"sourcesContent":["import * as React from 'react';\n/**\n * Context for providing the window.\n */\n// eslint-disable-next-line @fluentui/no-context-default-value\nexport var WindowContext = React.createContext({\n    // eslint-disable-next-line no-restricted-globals\n    window: typeof window === 'object' ? window : undefined,\n});\n/**\n * Hook to access the window object. This can be overridden contextually using the `WindowProvider`.\n */\nexport var useWindow = function () { return React.useContext(WindowContext).window; };\n/**\n * Hook to access the document object. This can be overridden contextually using the `WindowProvider`.\n */\nexport var useDocument = function () { var _a; return (_a = React.useContext(WindowContext).window) === null || _a === void 0 ? void 0 : _a.document; };\n/**\n * Component to provide the window object contextually. This is useful when rendering content to an element\n * contained within a child window or iframe element, where event handlers and styling must be projected\n * to an alternative window or document.\n */\nexport var WindowProvider = function (props) {\n    return React.createElement(WindowContext.Provider, { value: props }, props.children);\n};\n//# sourceMappingURL=WindowProvider.js.map"],"names":["WindowContext","React","useWindow"],"mappings":";AAKU,IAACA,IAAgB,gBAAAC,EAAM,cAAc;AAAA;AAAA,EAE3C,QAAQ,OAAO,UAAW,WAAW,SAAS;AAClD,CAAC,GAIUC,IAAY,WAAY;AAAE,SAAOD,EAAM,WAAWD,CAAa,EAAE;AAAO;","x_google_ignoreList":[0]}