function n(r) {
  for (var f = [], p = 1; p < arguments.length; p++)
    f[p - 1] = arguments[p];
  for (var o = 0, t = f; o < t.length; o++) {
    var y = t[o];
    h(r || {}, y);
  }
  return r;
}
function h(r, f, p) {
  p === void 0 && (p = []), p.push(f);
  for (var o in f)
    if (f.hasOwnProperty(o) && o !== "__proto__" && o !== "constructor" && o !== "prototype") {
      var t = f[o];
      if (typeof t == "object" && t !== null && !Array.isArray(t)) {
        var y = p.indexOf(t) > -1;
        r[o] = y ? t : h(r[o] || {}, t, p);
      } else
        r[o] = t;
    }
  return p.pop(), r;
}
export {
  n as merge
};
//# sourceMappingURL=merge.js.map
