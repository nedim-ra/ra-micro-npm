{"version":3,"file":"modalize.js","sources":["../../../../../node_modules/@fluentui/utilities/lib/modalize.js"],"sourcesContent":["/**\n * The helper functions here will make the target element as modal to screen readers, by placing aria-hidden on elements\n * that are siblings to the target element and the target element's ancestors (because aria-hidden gets inherited).\n * That way, all other elements on the page are hidden to the screen reader.\n */\nimport { getDocument } from './dom/getDocument';\n/** Tag names to ignore when modalizing */\nvar tagsToIgnore = ['TEMPLATE', 'STYLE', 'SCRIPT'];\n/**\n * Call this on a target element to make it modal to screen readers.\n * Returns a function that undoes the changes it made.\n */\nexport function modalize(target) {\n    var targetDocument = getDocument(target);\n    if (!targetDocument) {\n        // can't do this in SSR\n        return function () { return undefined; };\n    }\n    var affectedNodes = [];\n    // start at target, then recurse and do the same for parent, until we reach <body>\n    while (target !== targetDocument.body && target.parentElement) {\n        // grab all siblings of current element\n        for (var _i = 0, _a = target.parentElement.children; _i < _a.length; _i++) {\n            var sibling = _a[_i];\n            // but ignore elements that are already aria-hidden\n            var ariaHidden = sibling.getAttribute('aria-hidden');\n            if (sibling !== target && (ariaHidden === null || ariaHidden === void 0 ? void 0 : ariaHidden.toLowerCase()) !== 'true' && tagsToIgnore.indexOf(sibling.tagName) === -1) {\n                affectedNodes.push([sibling, ariaHidden]);\n            }\n        }\n        target = target.parentElement;\n    }\n    // take all those elements and set aria-hidden=true on them\n    affectedNodes.forEach(function (_a) {\n        var node = _a[0];\n        node.setAttribute('aria-hidden', 'true');\n    });\n    return function () {\n        unmodalize(affectedNodes);\n        affectedNodes = []; // dispose\n    };\n}\n/**\n * Undoes the changes that modalize() did.\n */\nfunction unmodalize(affectedNodes) {\n    affectedNodes.forEach(function (_a) {\n        var node = _a[0], originalValue = _a[1];\n        // Restore the original value (false or unset)\n        if (originalValue) {\n            node.setAttribute('aria-hidden', originalValue);\n        }\n        else {\n            node.removeAttribute('aria-hidden');\n        }\n    });\n}\n//# sourceMappingURL=modalize.js.map"],"names":["tagsToIgnore","modalize","target","targetDocument","getDocument","affectedNodes","_i","_a","sibling","ariaHidden","node","unmodalize","originalValue"],"mappings":";AAOA,IAAIA,IAAe,CAAC,YAAY,SAAS,QAAQ;AAK1C,SAASC,EAASC,GAAQ;AAC7B,MAAIC,IAAiBC,EAAYF,CAAM;AACvC,MAAI,CAACC;AAED,WAAO,WAAY;AAAA;AAIvB,WAFIE,IAAgB,CAAA,GAEbH,MAAWC,EAAe,QAAQD,EAAO,iBAAe;AAE3D,aAASI,IAAK,GAAGC,IAAKL,EAAO,cAAc,UAAUI,IAAKC,EAAG,QAAQD,KAAM;AACvE,UAAIE,IAAUD,EAAGD,CAAE,GAEfG,IAAaD,EAAQ,aAAa,aAAa;AACnD,MAAIA,MAAYN,MAAWO,KAAe,OAAgC,SAASA,EAAW,YAAa,OAAM,UAAUT,EAAa,QAAQQ,EAAQ,OAAO,MAAM,MACjKH,EAAc,KAAK,CAACG,GAASC,CAAU,CAAC;AAAA,IAE/C;AACD,IAAAP,IAASA,EAAO;AAAA,EACnB;AAED,SAAAG,EAAc,QAAQ,SAAUE,GAAI;AAChC,QAAIG,IAAOH,EAAG,CAAC;AACf,IAAAG,EAAK,aAAa,eAAe,MAAM;AAAA,EAC/C,CAAK,GACM,WAAY;AACf,IAAAC,EAAWN,CAAa,GACxBA,IAAgB,CAAA;AAAA,EACxB;AACA;AAIA,SAASM,EAAWN,GAAe;AAC/B,EAAAA,EAAc,QAAQ,SAAUE,GAAI;AAChC,QAAIG,IAAOH,EAAG,CAAC,GAAGK,IAAgBL,EAAG,CAAC;AAEtC,IAAIK,IACAF,EAAK,aAAa,eAAeE,CAAa,IAG9CF,EAAK,gBAAgB,aAAa;AAAA,EAE9C,CAAK;AACL;","x_google_ignoreList":[0]}