import { __extends as a } from "../../../../tslib/tslib.es6.js";
import * as e from "react";
import { Customizations as m } from "./Customizations.js";
import { CustomizerContext as s } from "./CustomizerContext.js";
import { mergeCustomizations as p } from "./mergeCustomizations.js";
var l = (
  /** @class */
  /* @__PURE__ */ function(n) {
    a(o, n);
    function o() {
      var t = n !== null && n.apply(this, arguments) || this;
      return t._onCustomizationChange = function() {
        return t.forceUpdate();
      }, t;
    }
    return o.prototype.componentDidMount = function() {
      m.observe(this._onCustomizationChange);
    }, o.prototype.componentWillUnmount = function() {
      m.unobserve(this._onCustomizationChange);
    }, o.prototype.render = function() {
      var t = this, i = this.props.contextTransform;
      return e.createElement(s.Consumer, null, function(u) {
        var r = p(t.props, u);
        return i && (r = i(r)), e.createElement(s.Provider, { value: r }, t.props.children);
      });
    }, o;
  }(e.Component)
);
export {
  l as Customizer
};
//# sourceMappingURL=Customizer.js.map
