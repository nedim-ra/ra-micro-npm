import { __assign as r, __extends as w } from "../../../../tslib/tslib.es6.js";
import * as a from "react";
import { Customizations as f } from "./Customizations.js";
import { hoistStatics as z } from "../hoistStatics.js";
import { CustomizerContext as x } from "./CustomizerContext.js";
import { MergeStylesShadowRootConsumer as b } from "../shadowDom/contexts/MergeStylesShadowRootConsumer.js";
import { getWindow as E } from "../dom/getWindow.js";
import { memoizeFunction as d } from "../memoize.js";
import { makeShadowConfig as W } from "../../../merge-styles/lib/shadowConfig.js";
import { concatStyleSets as M } from "../../../merge-styles/lib/concatStyleSets.js";
import { WindowContext as P } from "../../../react-window-provider/lib/WindowProvider.js";
var k = /* @__PURE__ */ d(W), F = /* @__PURE__ */ d(
  // eslint-disable-next-line @typescript-eslint/no-explicit-any
  function(s, m, y) {
    return r(r(r({}, s), m), { __shadowConfig__: y });
  }
);
function G(s, m, y) {
  return function(c) {
    var l, C = (l = /** @class */
    function(h) {
      w(i, h);
      function i(e) {
        var o = h.call(this, e) || this;
        return o._styleCache = {}, o._onSettingChanged = o._onSettingChanged.bind(o), o;
      }
      return i.prototype.componentDidMount = function() {
        f.observe(this._onSettingChanged);
      }, i.prototype.componentWillUnmount = function() {
        f.unobserve(this._onSettingChanged);
      }, i.prototype.render = function() {
        var e = this;
        return a.createElement(b, { stylesheetKey: s }, function(o) {
          return a.createElement(x.Consumer, null, function(g) {
            var u, t = f.getSettings(m, s, g.customizations), v = (u = e.context.window) !== null && u !== void 0 ? u : E(), p = k(s, o, v), n = e.props;
            if (t.styles && typeof t.styles == "function" && (t.styles = t.styles(r(r({}, t), n))), t.styles) {
              if (e._styleCache.default !== t.styles || e._styleCache.component !== n.styles) {
                var _ = M(t.styles, n.styles);
                _.__shadowConfig__ = p, e._styleCache.default = t.styles, e._styleCache.component = n.styles, e._styleCache.merged = _;
              }
              return a.createElement(c, r({}, t, n, { styles: e._styleCache.merged }));
            }
            var S = F(t.styles, n.styles, p);
            return a.createElement(c, r({}, t, n, { styles: S }));
          });
        });
      }, i.prototype._onSettingChanged = function() {
        this.forceUpdate();
      }, i;
    }(a.Component), l.displayName = "Customized" + s, l.contextType = P, l);
    return z(c, C);
  };
}
export {
  G as customizable
};
//# sourceMappingURL=customizable.js.map
