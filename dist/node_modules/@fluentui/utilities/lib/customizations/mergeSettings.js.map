{"version":3,"file":"mergeSettings.js","sources":["../../../../../../node_modules/@fluentui/utilities/lib/customizations/mergeSettings.js"],"sourcesContent":["import { __assign } from \"tslib\";\n/**\n * Merge new and old settings, giving priority to new settings.\n * New settings is optional in which case oldSettings is returned as-is.\n * @param oldSettings - Old settings to fall back to.\n * @param newSettings - New settings that will be merged over oldSettings.\n * @returns Merged settings.\n */\nexport function mergeSettings(oldSettings, newSettings) {\n    if (oldSettings === void 0) { oldSettings = {}; }\n    var mergeSettingsWith = _isSettingsFunction(newSettings) ? newSettings : _settingsMergeWith(newSettings);\n    return mergeSettingsWith(oldSettings);\n}\nexport function mergeScopedSettings(oldSettings, newSettings) {\n    if (oldSettings === void 0) { oldSettings = {}; }\n    var mergeSettingsWith = _isSettingsFunction(newSettings) ? newSettings : _scopedSettingsMergeWith(newSettings);\n    return mergeSettingsWith(oldSettings);\n}\nfunction _isSettingsFunction(settings) {\n    return typeof settings === 'function';\n}\nfunction _settingsMergeWith(newSettings) {\n    return function (settings) { return (newSettings ? __assign(__assign({}, settings), newSettings) : settings); };\n}\nfunction _scopedSettingsMergeWith(scopedSettingsFromProps) {\n    if (scopedSettingsFromProps === void 0) { scopedSettingsFromProps = {}; }\n    return function (oldScopedSettings) {\n        var newScopedSettings = __assign({}, oldScopedSettings);\n        for (var scopeName in scopedSettingsFromProps) {\n            if (scopedSettingsFromProps.hasOwnProperty(scopeName)) {\n                newScopedSettings[scopeName] = __assign(__assign({}, oldScopedSettings[scopeName]), scopedSettingsFromProps[scopeName]);\n            }\n        }\n        return newScopedSettings;\n    };\n}\n//# sourceMappingURL=mergeSettings.js.map"],"names":["mergeSettings","oldSettings","newSettings","mergeSettingsWith","_isSettingsFunction","_settingsMergeWith","mergeScopedSettings","_scopedSettingsMergeWith","settings","__assign","scopedSettingsFromProps","oldScopedSettings","newScopedSettings","scopeName"],"mappings":";AAQO,SAASA,EAAcC,GAAaC,GAAa;AACpD,EAAID,MAAgB,WAAUA,IAAc,CAAE;AAC9C,MAAIE,IAAoBC,EAAoBF,CAAW,IAAIA,IAAcG,EAAmBH,CAAW;AACvG,SAAOC,EAAkBF,CAAW;AACxC;AACO,SAASK,EAAoBL,GAAaC,GAAa;AAC1D,EAAID,MAAgB,WAAUA,IAAc,CAAE;AAC9C,MAAIE,IAAoBC,EAAoBF,CAAW,IAAIA,IAAcK,EAAyBL,CAAW;AAC7G,SAAOC,EAAkBF,CAAW;AACxC;AACA,SAASG,EAAoBI,GAAU;AACnC,SAAO,OAAOA,KAAa;AAC/B;AACA,SAASH,EAAmBH,GAAa;AACrC,SAAO,SAAUM,GAAU;AAAE,WAAQN,IAAcO,EAASA,EAAS,CAAE,GAAED,CAAQ,GAAGN,CAAW,IAAIM;AAAA,EAAU;AACjH;AACA,SAASD,EAAyBG,GAAyB;AACvD,SAAIA,MAA4B,WAAUA,IAA0B,CAAE,IAC/D,SAAUC,GAAmB;AAChC,QAAIC,IAAoBH,EAAS,CAAE,GAAEE,CAAiB;AACtD,aAASE,KAAaH;AAClB,MAAIA,EAAwB,eAAeG,CAAS,MAChDD,EAAkBC,CAAS,IAAIJ,EAASA,EAAS,CAAE,GAAEE,EAAkBE,CAAS,CAAC,GAAGH,EAAwBG,CAAS,CAAC;AAG9H,WAAOD;AAAA,EACf;AACA;","x_google_ignoreList":[0]}