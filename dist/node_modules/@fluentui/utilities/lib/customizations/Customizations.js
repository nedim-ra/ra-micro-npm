import { __assign as o } from "../../../../tslib/tslib.es6.js";
import { GlobalSettings as p } from "../GlobalSettings.js";
var S = "customizations", v = { settings: {}, scopedSettings: {}, inCustomizerContext: !1 }, e = /* @__PURE__ */ p.getValue(S, {
  settings: {},
  scopedSettings: {},
  inCustomizerContext: !1
}), r = [], _ = (
  /** @class */
  /* @__PURE__ */ function() {
    function t() {
    }
    return t.reset = function() {
      e.settings = {}, e.scopedSettings = {};
    }, t.applySettings = function(s) {
      e.settings = o(o({}, e.settings), s), t._raiseChange();
    }, t.applyScopedSettings = function(s, n) {
      e.scopedSettings[s] = o(o({}, e.scopedSettings[s]), n), t._raiseChange();
    }, t.getSettings = function(s, n, i) {
      i === void 0 && (i = v);
      for (var g = {}, c = n && i.scopedSettings[n] || {}, d = n && e.scopedSettings[n] || {}, u = 0, f = s; u < f.length; u++) {
        var a = f[u];
        g[a] = c[a] || i.settings[a] || d[a] || e.settings[a];
      }
      return g;
    }, t.applyBatchedUpdates = function(s, n) {
      t._suppressUpdates = !0;
      try {
        s();
      } catch {
      }
      t._suppressUpdates = !1, n || t._raiseChange();
    }, t.observe = function(s) {
      r.push(s);
    }, t.unobserve = function(s) {
      r = r.filter(function(n) {
        return n !== s;
      });
    }, t._raiseChange = function() {
      t._suppressUpdates || r.forEach(function(s) {
        return s();
      });
    }, t;
  }()
);
export {
  _ as Customizations
};
//# sourceMappingURL=Customizations.js.map
