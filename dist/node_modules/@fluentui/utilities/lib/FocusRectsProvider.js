import * as t from "react";
import { FocusRectsContext as f } from "./useFocusRects.js";
var c = function(o) {
  var d = o.providerRef, s = o.layerRoot, i = t.useState([])[0], e = t.useContext(f), u = e !== void 0 && !s, r = t.useMemo(function() {
    return u ? void 0 : {
      providerRef: d,
      registeredProviders: i,
      registerProvider: function(n) {
        i.push(n), e == null || e.registerProvider(n);
      },
      unregisterProvider: function(n) {
        e == null || e.unregisterProvider(n);
        var v = i.indexOf(n);
        v >= 0 && i.splice(v, 1);
      }
    };
  }, [d, i, e, u]);
  return t.useEffect(function() {
    if (r)
      return r.registerProvider(r.providerRef), function() {
        return r.unregisterProvider(r.providerRef);
      };
  }, [r]), r ? t.createElement(f.Provider, { value: r }, o.children) : t.createElement(t.Fragment, null, o.children);
};
export {
  c as FocusRectsProvider
};
//# sourceMappingURL=FocusRectsProvider.js.map
