{"version":3,"file":"GlobalSettings.js","sources":["../../../../../node_modules/@fluentui/utilities/lib/GlobalSettings.js"],"sourcesContent":["import { getWindow } from './dom/getWindow';\n/**\n * Storing global state in local module variables has issues when more than one copy\n * if the module gets loaded on the page (due to a bundling error or simply by consuming\n * a prebundled script.)\n *\n * This file contains helpers to deal with the getting and setting local state, and allows\n * callers to get called back when it mutates.\n */\nvar GLOBAL_SETTINGS_PROP_NAME = '__globalSettings__';\nvar CALLBACK_STATE_PROP_NAME = '__callbacks__';\nvar _counter = 0;\n/**\n * Global settings helper, which stores settings in the global (window) namespace.\n * If window is not provided, it will store settings in module scope. Provides a\n * way to observe changes as well when their values change.\n *\n * @public\n * {@docCategory GlobalSettings}\n */\nvar GlobalSettings = /** @class */ (function () {\n    function GlobalSettings() {\n    }\n    GlobalSettings.getValue = function (key, defaultValue) {\n        var globalSettings = _getGlobalSettings();\n        if (globalSettings[key] === undefined) {\n            globalSettings[key] = typeof defaultValue === 'function' ? defaultValue() : defaultValue;\n        }\n        return globalSettings[key];\n    };\n    GlobalSettings.setValue = function (key, value) {\n        var globalSettings = _getGlobalSettings();\n        var callbacks = globalSettings[CALLBACK_STATE_PROP_NAME];\n        var oldValue = globalSettings[key];\n        if (value !== oldValue) {\n            globalSettings[key] = value;\n            var changeDescription = {\n                oldValue: oldValue,\n                value: value,\n                key: key,\n            };\n            for (var id in callbacks) {\n                if (callbacks.hasOwnProperty(id)) {\n                    callbacks[id](changeDescription);\n                }\n            }\n        }\n        return value;\n    };\n    GlobalSettings.addChangeListener = function (cb) {\n        // Note: we use generated ids on the callbacks to create a map of the callbacks, which optimizes removal.\n        // (It's faster to delete a key than it is to look up the index of an object and splice an array.)\n        var id = cb.__id__;\n        var callbacks = _getCallbacks();\n        if (!id) {\n            id = cb.__id__ = String(_counter++);\n        }\n        callbacks[id] = cb;\n    };\n    GlobalSettings.removeChangeListener = function (cb) {\n        var callbacks = _getCallbacks();\n        delete callbacks[cb.__id__];\n    };\n    return GlobalSettings;\n}());\nexport { GlobalSettings };\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction _getGlobalSettings() {\n    var _a;\n    var win = getWindow();\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    var globalObj = win || {};\n    if (!globalObj[GLOBAL_SETTINGS_PROP_NAME]) {\n        globalObj[GLOBAL_SETTINGS_PROP_NAME] = (_a = {},\n            _a[CALLBACK_STATE_PROP_NAME] = {},\n            _a);\n    }\n    return globalObj[GLOBAL_SETTINGS_PROP_NAME];\n}\nfunction _getCallbacks() {\n    var globalSettings = _getGlobalSettings();\n    return globalSettings[CALLBACK_STATE_PROP_NAME];\n}\n//# sourceMappingURL=GlobalSettings.js.map"],"names":["GLOBAL_SETTINGS_PROP_NAME","CALLBACK_STATE_PROP_NAME","_counter","GlobalSettings","key","defaultValue","globalSettings","_getGlobalSettings","value","callbacks","oldValue","changeDescription","id","cb","_getCallbacks","_a","win","getWindow","globalObj"],"mappings":";AASA,IAAIA,IAA4B,sBAC5BC,IAA2B,iBAC3BC,IAAW,GASXC;AAAA;AAAA,EAAgC,2BAAY;AAC5C,aAASA,IAAiB;AAAA,IACzB;AACD,WAAAA,EAAe,WAAW,SAAUC,GAAKC,GAAc;AACnD,UAAIC,IAAiBC;AACrB,aAAID,EAAeF,CAAG,MAAM,WACxBE,EAAeF,CAAG,IAAI,OAAOC,KAAiB,aAAaA,EAAc,IAAGA,IAEzEC,EAAeF,CAAG;AAAA,IACjC,GACID,EAAe,WAAW,SAAUC,GAAKI,GAAO;AAC5C,UAAIF,IAAiBC,KACjBE,IAAYH,EAAeL,CAAwB,GACnDS,IAAWJ,EAAeF,CAAG;AACjC,UAAII,MAAUE,GAAU;AACpB,QAAAJ,EAAeF,CAAG,IAAII;AACtB,YAAIG,IAAoB;AAAA,UACpB,UAAUD;AAAA,UACV,OAAOF;AAAA,UACP,KAAKJ;AAAA,QACrB;AACY,iBAASQ,KAAMH;AACX,UAAIA,EAAU,eAAeG,CAAE,KAC3BH,EAAUG,CAAE,EAAED,CAAiB;AAAA,MAG1C;AACD,aAAOH;AAAA,IACf,GACIL,EAAe,oBAAoB,SAAUU,GAAI;AAG7C,UAAID,IAAKC,EAAG,QACRJ,IAAYK;AAChB,MAAKF,MACDA,IAAKC,EAAG,SAAS,OAAOX,GAAU,IAEtCO,EAAUG,CAAE,IAAIC;AAAA,IACxB,GACIV,EAAe,uBAAuB,SAAUU,GAAI;AAChD,UAAIJ,IAAYK;AAChB,aAAOL,EAAUI,EAAG,MAAM;AAAA,IAClC,GACWV;AAAA,EACX;;AAGA,SAASI,IAAqB;AAC1B,MAAIQ,GACAC,IAAMC,KAENC,IAAYF,KAAO;AACvB,SAAKE,EAAUlB,CAAyB,MACpCkB,EAAUlB,CAAyB,KAAKe,IAAK,CAAE,GAC3CA,EAAGd,CAAwB,IAAI,CAAE,GACjCc,KAEDG,EAAUlB,CAAyB;AAC9C;AACA,SAASc,IAAgB;AACrB,MAAIR,IAAiBC;AACrB,SAAOD,EAAeL,CAAwB;AAClD;","x_google_ignoreList":[0]}