{"version":3,"file":"MergeStylesRootContext.js","sources":["../../../../../../../node_modules/@fluentui/utilities/lib/shadowDom/contexts/MergeStylesRootContext.js"],"sourcesContent":["import { __assign, __rest } from \"tslib\";\nimport * as React from 'react';\nimport { GLOBAL_STYLESHEET_KEY, ShadowDomStylesheet, makeShadowConfig, DEFAULT_SHADOW_CONFIG, } from '@fluentui/merge-styles';\nimport { getWindow } from '../../dom';\nimport { useAdoptedStylesheet as useAdoptedStylesheetDefault, useAdoptedStylesheetEx as useAdoptedStylesheetExDefault, } from '../hooks/useAdoptedStylesheet';\nimport { useShadowConfig as useShadowConfigDefault } from '../hooks/useShadowConfig';\nimport { useHasMergeStylesShadowRootContext as useHasMergeStylesShadowRootContextDefault, useMergeStylesShadowRootContext as useMergeStylesShadowRootContextDefault, } from '../hooks/useMergeStylesShadowRoot';\nimport { useMergeStylesRootStylesheets as useMergeStylesRootStylesheetsDefault } from '../hooks/useMergeStylesRootStylesheets';\nimport { useStyled as useStyledDefault } from '../hooks/useStyled';\nimport { useWindow as useWindowDefault } from '@fluentui/react-window-provider';\nvar noop = function () { return false; };\nvar noopShadow = function () { return DEFAULT_SHADOW_CONFIG; };\nvar noopRootStylesheets = function () { return new Map(); };\nvar noopUndefined = function () { return undefined; };\nexport var MergeStylesRootContext = React.createContext({\n    stylesheets: new Map(),\n    useAdoptedStylesheetEx: noop,\n    useAdoptedStylesheet: noop,\n    useShadowConfig: noopShadow,\n    useMergeStylesShadowRootContext: noopUndefined,\n    useHasMergeStylesShadowRootContext: noop,\n    useMergeStylesRootStylesheets: noopRootStylesheets,\n    useWindow: noopUndefined,\n    useStyled: noopUndefined,\n});\n/**\n * Root context provider for mergeStyles shadow DOM.\n * Typically this is placed at the render root of your React application.\n */\nexport var MergeStylesRootProvider = function (_a) {\n    var userSheets = _a.stylesheets, userWindow = _a.window, useAdoptedStylesheet = _a.useAdoptedStylesheet, useAdoptedStylesheetEx = _a.useAdoptedStylesheetEx, useShadowConfig = _a.useShadowConfig, useMergeStylesShadowRootContext = _a.useMergeStylesShadowRootContext, useHasMergeStylesShadowRootContext = _a.useHasMergeStylesShadowRootContext, useMergeStylesRootStylesheets = _a.useMergeStylesRootStylesheets, useWindow = _a.useWindow, useStyled = _a.useStyled, props = __rest(_a, [\"stylesheets\", \"window\", \"useAdoptedStylesheet\", \"useAdoptedStylesheetEx\", \"useShadowConfig\", \"useMergeStylesShadowRootContext\", \"useHasMergeStylesShadowRootContext\", \"useMergeStylesRootStylesheets\", \"useWindow\", \"useStyled\"]);\n    var win = userWindow !== null && userWindow !== void 0 ? userWindow : getWindow();\n    var _b = React.useState(function () { return userSheets || new Map(); }), stylesheets = _b[0], setStylesheets = _b[1];\n    var sheetHandler = React.useCallback(function (_a) {\n        var key = _a.key, sheet = _a.sheet;\n        setStylesheets(function (prev) {\n            var next = new Map(prev);\n            next.set(key, sheet);\n            return next;\n        });\n    }, []);\n    // Udapte stylesheets based on user style sheet changes\n    React.useEffect(function () {\n        setStylesheets(userSheets || new Map());\n    }, [userSheets]);\n    // Wire up listener for adopted stylesheets\n    React.useEffect(function () {\n        if (!win) {\n            return;\n        }\n        var sheet = ShadowDomStylesheet.getInstance(makeShadowConfig(GLOBAL_STYLESHEET_KEY, false, win));\n        var off = sheet.onAddSheet(sheetHandler);\n        return function () {\n            off();\n        };\n    }, [win, sheetHandler]);\n    // Read stylesheets from window on mount\n    React.useEffect(function () {\n        if (!win) {\n            return;\n        }\n        var changed = false;\n        var next = new Map(stylesheets);\n        var sheet = ShadowDomStylesheet.getInstance(makeShadowConfig(GLOBAL_STYLESHEET_KEY, false, win));\n        var adoptedSheets = sheet.getAdoptedSheets();\n        adoptedSheets.forEach(function (adoptedSheet, key) {\n            next.set(key, adoptedSheet);\n            changed = true;\n        });\n        if (changed) {\n            setStylesheets(next);\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n    var value = React.useMemo(function () {\n        return {\n            stylesheets: stylesheets,\n            useAdoptedStylesheet: useAdoptedStylesheet || useAdoptedStylesheetDefault,\n            useAdoptedStylesheetEx: useAdoptedStylesheetEx || useAdoptedStylesheetExDefault,\n            useShadowConfig: useShadowConfig || useShadowConfigDefault,\n            useMergeStylesShadowRootContext: useMergeStylesShadowRootContext || useMergeStylesShadowRootContextDefault,\n            useHasMergeStylesShadowRootContext: useHasMergeStylesShadowRootContext || useHasMergeStylesShadowRootContextDefault,\n            useMergeStylesRootStylesheets: useMergeStylesRootStylesheets || useMergeStylesRootStylesheetsDefault,\n            useWindow: useWindow || useWindowDefault,\n            useStyled: useStyled || useStyledDefault,\n        };\n    }, [\n        stylesheets,\n        useAdoptedStylesheet,\n        useAdoptedStylesheetEx,\n        useShadowConfig,\n        useMergeStylesShadowRootContext,\n        useHasMergeStylesShadowRootContext,\n        useMergeStylesRootStylesheets,\n        useWindow,\n        useStyled,\n    ]);\n    return React.createElement(MergeStylesRootContext.Provider, __assign({ value: value }, props));\n};\n//# sourceMappingURL=MergeStylesRootContext.js.map"],"names":["noop","noopShadow","DEFAULT_SHADOW_CONFIG","noopRootStylesheets","noopUndefined","MergeStylesRootContext","React"],"mappings":";;AAUA,IAAIA,IAAO,WAAY;AAAE,SAAO;GAC5BC,IAAa,WAAY;AAAE,SAAOC;GAClCC,IAAsB,WAAY;AAAE,SAAO,oBAAI,IAAG;AAAG,GACrDC,IAAgB,WAAY;GACrBC,IAAyB,gBAAAC,EAAM,cAAc;AAAA,EACpD,aAAa,oBAAI,IAAK;AAAA,EACtB,wBAAwBN;AAAA,EACxB,sBAAsBA;AAAA,EACtB,iBAAiBC;AAAA,EACjB,iCAAiCG;AAAA,EACjC,oCAAoCJ;AAAA,EACpC,+BAA+BG;AAAA,EAC/B,WAAWC;AAAA,EACX,WAAWA;AACf,CAAC;","x_google_ignoreList":[0]}