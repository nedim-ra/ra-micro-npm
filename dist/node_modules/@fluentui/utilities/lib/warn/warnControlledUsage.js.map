{"version":3,"file":"warnControlledUsage.js","sources":["../../../../../../node_modules/@fluentui/utilities/lib/warn/warnControlledUsage.js"],"sourcesContent":["import { warn } from './warn';\nimport { isControlled as checkIsControlled } from '../controlled';\nvar warningsMap;\nif (process.env.NODE_ENV !== 'production') {\n    warningsMap = {\n        valueOnChange: {},\n        valueDefaultValue: {},\n        controlledToUncontrolled: {},\n        uncontrolledToControlled: {},\n    };\n}\n/** Reset controlled usage warnings for testing purposes. */\nexport function resetControlledWarnings() {\n    if (process.env.NODE_ENV !== 'production') {\n        warningsMap.valueOnChange = {};\n        warningsMap.valueDefaultValue = {};\n        warningsMap.controlledToUncontrolled = {};\n        warningsMap.uncontrolledToControlled = {};\n    }\n}\n/**\n * Check for and warn on the following error conditions with a form component:\n * - A value prop is provided (indicated it's being used as controlled) without a change handler,\n *    and the component is not read-only\n * - Both the value and defaultValue props are provided\n * - The component is attempting to switch between controlled and uncontrolled\n *\n * The messages mimic the warnings React gives for these error conditions on input elements.\n * The warning will only be displayed once per component ID.\n */\nexport function warnControlledUsage(params) {\n    if (process.env.NODE_ENV !== 'production') {\n        var componentId = params.componentId, componentName = params.componentName, defaultValueProp = params.defaultValueProp, props = params.props, oldProps = params.oldProps, onChangeProp = params.onChangeProp, readOnlyProp = params.readOnlyProp, valueProp = params.valueProp;\n        // This warning logic closely follows what React does for native <input> elements.\n        var oldIsControlled = oldProps ? checkIsControlled(oldProps, valueProp) : undefined;\n        var newIsControlled = checkIsControlled(props, valueProp);\n        if (newIsControlled) {\n            // onChange (or readOnly) must be provided if value is provided\n            var hasOnChange = !!props[onChangeProp];\n            var isReadOnly = !!(readOnlyProp && props[readOnlyProp]);\n            if (!(hasOnChange || isReadOnly) && !warningsMap.valueOnChange[componentId]) {\n                warningsMap.valueOnChange[componentId] = true;\n                warn(\"Warning: You provided a '\".concat(String(valueProp), \"' prop to a \").concat(String(componentName), \" without an '\").concat(String(onChangeProp), \"' handler. \") +\n                    \"This will render a read-only field. If the field should be mutable use '\".concat(String(defaultValueProp), \"'. \") +\n                    \"Otherwise, set '\".concat(String(onChangeProp), \"'\").concat(readOnlyProp ? \" or '\".concat(String(readOnlyProp), \"'\") : '', \".\"));\n            }\n            // value and defaultValue are mutually exclusive\n            var defaultValue = props[defaultValueProp];\n            if (defaultValue !== undefined && defaultValue !== null && !warningsMap.valueDefaultValue[componentId]) {\n                warningsMap.valueDefaultValue[componentId] = true;\n                warn(\"Warning: You provided both '\".concat(String(valueProp), \"' and '\").concat(String(defaultValueProp), \"' to a \").concat(componentName, \". \") +\n                    \"Form fields must be either controlled or uncontrolled (specify either the '\".concat(String(valueProp), \"' prop, \") +\n                    \"or the '\".concat(String(defaultValueProp), \"' prop, but not both). Decide between using a controlled or uncontrolled \") +\n                    \"\".concat(componentName, \" and remove one of these props. More info: https://fb.me/react-controlled-components\"));\n            }\n        }\n        // Warn if switching between uncontrolled and controlled. (One difference between this implementation\n        // and React's <input> is that if oldIsControlled is indeterminate and newIsControlled true, we don't warn.)\n        if (oldProps && newIsControlled !== oldIsControlled) {\n            var oldType = oldIsControlled ? 'a controlled' : 'an uncontrolled';\n            var newType = oldIsControlled ? 'uncontrolled' : 'controlled';\n            var warnMap = oldIsControlled ? warningsMap.controlledToUncontrolled : warningsMap.uncontrolledToControlled;\n            if (!warnMap[componentId]) {\n                warnMap[componentId] = true;\n                warn(\"Warning: A component is changing \".concat(oldType, \" \").concat(componentName, \" to be \").concat(newType, \". \") +\n                    \"\".concat(componentName, \"s should not switch from controlled to uncontrolled (or vice versa). \") +\n                    \"Decide between using controlled or uncontrolled for the lifetime of the component. \" +\n                    \"More info: https://fb.me/react-controlled-components\");\n            }\n        }\n    }\n}\n//# sourceMappingURL=warnControlledUsage.js.map"],"names":["warningsMap","warnControlledUsage","params","componentId","componentName","defaultValueProp","props","oldProps","onChangeProp","readOnlyProp","valueProp","oldIsControlled","checkIsControlled","newIsControlled","hasOnChange","isReadOnly","warn","defaultValue","oldType","newType","warnMap"],"mappings":";;AAEA,IAAIA;AACA,QAAQ,IAAI,aAAa,iBACzBA,IAAc;AAAA,EACV,eAAe,CAAE;AAAA,EACjB,mBAAmB,CAAE;AAAA,EACrB,0BAA0B,CAAE;AAAA,EAC5B,0BAA0B,CAAE;AACpC;AAqBO,SAASC,EAAoBC,GAAQ;AACxC,MAAI,QAAQ,IAAI,aAAa,cAAc;AACvC,QAAIC,IAAcD,EAAO,aAAaE,IAAgBF,EAAO,eAAeG,IAAmBH,EAAO,kBAAkBI,IAAQJ,EAAO,OAAOK,IAAWL,EAAO,UAAUM,IAAeN,EAAO,cAAcO,IAAeP,EAAO,cAAcQ,IAAYR,EAAO,WAEjQS,IAAkBJ,IAAWK,EAAkBL,GAAUG,CAAS,IAAI,QACtEG,IAAkBD,EAAkBN,GAAOI,CAAS;AACxD,QAAIG,GAAiB;AAEjB,UAAIC,IAAc,CAAC,CAACR,EAAME,CAAY,GAClCO,IAAa,CAAC,EAAEN,KAAgBH,EAAMG,CAAY;AACtD,MAAI,EAAEK,KAAeC,MAAe,CAACf,EAAY,cAAcG,CAAW,MACtEH,EAAY,cAAcG,CAAW,IAAI,IACzCa,EAAK,4BAA4B,OAAO,OAAON,CAAS,GAAG,cAAc,EAAE,OAAO,OAAON,CAAa,GAAG,eAAe,EAAE,OAAO,OAAOI,CAAY,GAAG,aAAa,IAChK,2EAA2E,OAAO,OAAOH,CAAgB,GAAG,KAAK,IACjH,mBAAmB,OAAO,OAAOG,CAAY,GAAG,GAAG,EAAE,OAAOC,IAAe,QAAQ,OAAO,OAAOA,CAAY,GAAG,GAAG,IAAI,IAAI,GAAG,CAAC;AAGvI,UAAIQ,IAAeX,EAAMD,CAAgB;AACzC,MAAkCY,KAAiB,QAAQ,CAACjB,EAAY,kBAAkBG,CAAW,MACjGH,EAAY,kBAAkBG,CAAW,IAAI,IAC7Ca,EAAK,+BAA+B,OAAO,OAAON,CAAS,GAAG,SAAS,EAAE,OAAO,OAAOL,CAAgB,GAAG,SAAS,EAAE,OAAOD,GAAe,IAAI,IAC3I,8EAA8E,OAAO,OAAOM,CAAS,GAAG,UAAU,IAClH,WAAW,OAAO,OAAOL,CAAgB,GAAG,2EAA2E,IACvH,GAAG,OAAOD,GAAe,sFAAsF,CAAC;AAAA,IAE3H;AAGD,QAAIG,KAAYM,MAAoBF,GAAiB;AACjD,UAAIO,IAAUP,IAAkB,iBAAiB,mBAC7CQ,IAAUR,IAAkB,iBAAiB,cAC7CS,IAAUT,IAAkBX,EAAY,2BAA2BA,EAAY;AACnF,MAAKoB,EAAQjB,CAAW,MACpBiB,EAAQjB,CAAW,IAAI,IACvBa,EAAK,oCAAoC,OAAOE,GAAS,GAAG,EAAE,OAAOd,GAAe,SAAS,EAAE,OAAOe,GAAS,IAAI,IAC/G,GAAG,OAAOf,GAAe,uEAAuE,IAChG,yIACsD;AAAA,IAEjE;AAAA,EACJ;AACL;","x_google_ignoreList":[0]}