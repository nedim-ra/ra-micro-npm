{"version":3,"file":"warnMutuallyExclusive.js","sources":["../../../../../../node_modules/@fluentui/utilities/lib/warn/warnMutuallyExclusive.js"],"sourcesContent":["import { warn } from './warn';\n/**\n * Warns when two props which are mutually exclusive are both being used.\n *\n * @public\n * @param componentName - The name of the component being used.\n * @param props - The props passed into the component.\n * @param exclusiveMap - A map where the key is a parameter, and the value is the other parameter.\n */\nexport function warnMutuallyExclusive(componentName, props, exclusiveMap) {\n    if (process.env.NODE_ENV !== 'production') {\n        for (var propName in exclusiveMap) {\n            if (props && props[propName] !== undefined) {\n                var propInExclusiveMapValue = exclusiveMap[propName];\n                if (propInExclusiveMapValue && props[propInExclusiveMapValue] !== undefined) {\n                    warn(\"\".concat(componentName, \" property '\").concat(propName, \"' is mutually exclusive with '\").concat(exclusiveMap[propName], \"'. \") +\n                        \"Use one or the other.\");\n                }\n            }\n        }\n    }\n}\n//# sourceMappingURL=warnMutuallyExclusive.js.map"],"names":["warnMutuallyExclusive","componentName","props","exclusiveMap","propName","propInExclusiveMapValue","warn"],"mappings":";AASO,SAASA,EAAsBC,GAAeC,GAAOC,GAAc;AACtE,MAAI,QAAQ,IAAI,aAAa;AACzB,aAASC,KAAYD;AACjB,UAAID,KAASA,EAAME,CAAQ,MAAM,QAAW;AACxC,YAAIC,IAA0BF,EAAaC,CAAQ;AACnD,QAAIC,KAA2BH,EAAMG,CAAuB,MAAM,UAC9DC,EAAK,GAAG,OAAOL,GAAe,aAAa,EAAE,OAAOG,GAAU,gCAAgC,EAAE,OAAOD,EAAaC,CAAQ,GAAG,KAAK,IAChI,uBAAuB;AAAA,MAElC;AAAA;AAGb;","x_google_ignoreList":[0]}