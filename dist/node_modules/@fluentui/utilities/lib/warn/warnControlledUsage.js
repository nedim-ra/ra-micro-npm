import { warn as f } from "./warn.js";
import { isControlled as s } from "../controlled.js";
var o;
process.env.NODE_ENV !== "production" && (o = {
  valueOnChange: {},
  valueDefaultValue: {},
  controlledToUncontrolled: {},
  uncontrolledToControlled: {}
});
function O(n) {
  if (process.env.NODE_ENV !== "production") {
    var t = n.componentId, e = n.componentName, c = n.defaultValueProp, i = n.props, u = n.oldProps, d = n.onChangeProp, l = n.readOnlyProp, r = n.valueProp, a = u ? s(u, r) : void 0, h = s(i, r);
    if (h) {
      var b = !!i[d], S = !!(l && i[l]);
      !(b || S) && !o.valueOnChange[t] && (o.valueOnChange[t] = !0, f("Warning: You provided a '".concat(String(r), "' prop to a ").concat(String(e), " without an '").concat(String(d), "' handler. ") + "This will render a read-only field. If the field should be mutable use '".concat(String(c), "'. ") + "Otherwise, set '".concat(String(d), "'").concat(l ? " or '".concat(String(l), "'") : "", ".")));
      var g = i[c];
      g != null && !o.valueDefaultValue[t] && (o.valueDefaultValue[t] = !0, f("Warning: You provided both '".concat(String(r), "' and '").concat(String(c), "' to a ").concat(e, ". ") + "Form fields must be either controlled or uncontrolled (specify either the '".concat(String(r), "' prop, ") + "or the '".concat(String(c), "' prop, but not both). Decide between using a controlled or uncontrolled ") + "".concat(e, " and remove one of these props. More info: https://fb.me/react-controlled-components")));
    }
    if (u && h !== a) {
      var w = a ? "a controlled" : "an uncontrolled", D = a ? "uncontrolled" : "controlled", v = a ? o.controlledToUncontrolled : o.uncontrolledToControlled;
      v[t] || (v[t] = !0, f("Warning: A component is changing ".concat(w, " ").concat(e, " to be ").concat(D, ". ") + "".concat(e, "s should not switch from controlled to uncontrolled (or vice versa). ") + "Decide between using controlled or uncontrolled for the lifetime of the component. More info: https://fb.me/react-controlled-components"));
    }
  }
}
export {
  O as warnControlledUsage
};
//# sourceMappingURL=warnControlledUsage.js.map
