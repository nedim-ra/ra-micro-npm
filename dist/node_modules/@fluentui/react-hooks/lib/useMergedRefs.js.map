{"version":3,"file":"useMergedRefs.js","sources":["../../../../../node_modules/@fluentui/react-hooks/lib/useMergedRefs.js"],"sourcesContent":["import { __spreadArray } from \"tslib\";\nimport * as React from 'react';\n/**\n * React hook to merge multiple React refs (either MutableRefObjects or ref callbacks) into a single ref callback that\n * updates all provided refs\n * @param refs - Refs to collectively update with one ref value.\n * @returns A function with an attached \"current\" prop, so that it can be treated like a RefObject.\n */\nexport function useMergedRefs() {\n    var refs = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        refs[_i] = arguments[_i];\n    }\n    var mergedCallback = React.useCallback(function (value) {\n        // Update the \"current\" prop hanging on the function.\n        mergedCallback.current = value;\n        for (var _i = 0, refs_1 = refs; _i < refs_1.length; _i++) {\n            var ref = refs_1[_i];\n            if (typeof ref === 'function') {\n                ref(value);\n            }\n            else if (ref) {\n                // work around the immutability of the React.Ref type\n                ref.current = value;\n            }\n        }\n    }, __spreadArray([], refs, true));\n    return mergedCallback;\n}\n//# sourceMappingURL=useMergedRefs.js.map"],"names":["useMergedRefs","refs","_i","mergedCallback","React","value","refs_1","ref","__spreadArray"],"mappings":";;AAQO,SAASA,IAAgB;AAE5B,WADIC,IAAO,CAAA,GACFC,IAAK,GAAGA,IAAK,UAAU,QAAQA;AACpC,IAAAD,EAAKC,CAAE,IAAI,UAAUA,CAAE;AAE3B,MAAIC,IAAiBC,EAAM,YAAY,SAAUC,GAAO;AAEpD,IAAAF,EAAe,UAAUE;AACzB,aAASH,IAAK,GAAGI,IAASL,GAAMC,IAAKI,EAAO,QAAQJ,KAAM;AACtD,UAAIK,IAAMD,EAAOJ,CAAE;AACnB,MAAI,OAAOK,KAAQ,aACfA,EAAIF,CAAK,IAEJE,MAELA,EAAI,UAAUF;AAAA,IAErB;AAAA,EACJ,GAAEG,EAAc,CAAE,GAAEP,GAAM,EAAI,CAAC;AAChC,SAAOE;AACX;","x_google_ignoreList":[0]}