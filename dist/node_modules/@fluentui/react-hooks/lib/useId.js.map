{"version":3,"file":"useId.js","sources":["../../../../../node_modules/@fluentui/react-hooks/lib/useId.js"],"sourcesContent":["import * as React from 'react';\nimport { getId } from '@fluentui/utilities';\n/**\n * Hook to generate a unique ID in the global scope (spanning across duplicate copies of the same library).\n *\n * @param prefix - Optional prefix for the ID\n * @param providedId - Optional id provided by a parent component. Defaults to the provided value if present,\n *  without conditioning the hook call\n * @returns The ID\n */\nexport function useId(prefix, providedId) {\n    // getId should only be called once since it updates the global constant for the next ID value.\n    // (While an extra update isn't likely to cause problems in practice, it's better to avoid it.)\n    var ref = React.useRef(providedId);\n    if (!ref.current) {\n        ref.current = getId(prefix);\n    }\n    return ref.current;\n}\n//# sourceMappingURL=useId.js.map"],"names":["useId","prefix","providedId","ref","React","getId"],"mappings":";;AAUO,SAASA,EAAMC,GAAQC,GAAY;AAGtC,MAAIC,IAAMC,EAAM,OAAOF,CAAU;AACjC,SAAKC,EAAI,YACLA,EAAI,UAAUE,EAAMJ,CAAM,IAEvBE,EAAI;AACf;","x_google_ignoreList":[0]}