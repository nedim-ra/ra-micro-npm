import { __assign as f } from "../../../../tslib/tslib.es6.js";
import { loadTheme as d } from "../../../../@microsoft/load-themed-styles/lib-es6/index.js";
import { createTheme as l } from "../../../theme/lib/createTheme.js";
import { getWindow as T } from "../../../utilities/lib/dom/getWindow.js";
import { Customizations as h } from "../../../utilities/lib/customizations/Customizations.js";
var t = /* @__PURE__ */ l({}), y = [], s = "theme";
function _() {
  var e, o, r, i = T();
  !((o = i == null ? void 0 : i.FabricConfig) === null || o === void 0) && o.legacyTheme ? b(i.FabricConfig.legacyTheme) : h.getSettings([s]).theme || (!((r = i == null ? void 0 : i.FabricConfig) === null || r === void 0) && r.theme && (t = l(i.FabricConfig.theme)), h.applySettings((e = {}, e[s] = t, e)));
}
function j(e) {
  return e === void 0 && (e = !1), e === !0 && (t = l({}, e)), t;
}
function b(e, o) {
  var r;
  return o === void 0 && (o = !1), t = l(e, o), d(f(f(f(f({}, t.palette), t.semanticColors), t.effects), C(t))), h.applySettings((r = {}, r[s] = t, r)), y.forEach(function(i) {
    try {
      i(t);
    } catch {
    }
  }), t;
}
function C(e) {
  for (var o = {}, r = 0, i = Object.keys(e.fonts); r < i.length; r++)
    for (var c = i[r], g = e.fonts[c], v = 0, m = Object.keys(g); v < m.length; v++) {
      var a = m[v], u = c + a.charAt(0).toUpperCase() + a.slice(1), n = g[a];
      a === "fontSize" && typeof n == "number" && (n = n + "px"), o[u] = n;
    }
  return o;
}
export {
  s as ThemeSettingName,
  l as createTheme,
  j as getTheme,
  _ as initializeThemeInCustomizations,
  b as loadTheme
};
//# sourceMappingURL=theme.js.map
