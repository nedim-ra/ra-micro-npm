import { HighContrastSelector as S } from "./CommonStyles.js";
import { ZIndexes as p } from "./zIndexes.js";
import { IsFocusVisibleClassName as v } from "../../../utilities/lib/setFocusVisibility.js";
function R(t, o, r, n, l, i, e, c) {
  return typeof o == "number" || !o ? C(t, {
    inset: o,
    position: r,
    highContrastStyle: n,
    borderColor: l,
    outlineColor: i,
    isFocusedOnly: e,
    borderRadius: c
  }) : C(t, o);
}
function C(t, o) {
  var r, n;
  o === void 0 && (o = {});
  var l = o.borderRadius, i = o.inset, e = i === void 0 ? 0 : i, c = o.width, s = c === void 0 ? 1 : c, a = o.position, h = a === void 0 ? "relative" : a, y = o.highContrastStyle, u = o.borderColor, m = u === void 0 ? t.palette.white : u, d = o.outlineColor, _ = d === void 0 ? t.palette.neutralSecondary : d, f = o.isFocusedOnly, b = f === void 0 ? !0 : f, g = o.pointerEvents;
  return {
    // Clear browser-specific focus styles and use 'transparent' as placeholder for focus style.
    outline: "transparent",
    // Requirement because pseudo-element is absolutely positioned.
    position: h,
    selectors: (r = {
      // Clear the focus border in Firefox.
      // Reference: http://stackoverflow.com/a/199319/1436671
      "::-moz-focus-inner": {
        border: "0"
      }
    }, // When the element that uses this mixin is in a :focus state, add a pseudo-element to
    // create a border.
    r[".".concat(v, " &").concat(b ? ":focus" : "", ":after, :host(.").concat(v, ") &").concat(b ? ":focus" : "", ":after")] = {
      content: '""',
      position: "absolute",
      pointerEvents: g,
      left: e + 1,
      top: e + 1,
      bottom: e + 1,
      right: e + 1,
      border: "".concat(s, "px solid ").concat(m),
      outline: "".concat(s, "px solid ").concat(_),
      zIndex: p.FocusStyle,
      borderRadius: l,
      selectors: (n = {}, n[S] = y, n)
    }, r)
  };
}
function w() {
  return {
    selectors: {
      "&::-moz-focus-inner": {
        // Clear the focus border in Firefox. Reference: http://stackoverflow.com/a/199319/1436671
        border: 0
      },
      "&": {
        // Clear browser specific focus styles and use transparent as placeholder for focus style
        outline: "transparent"
      }
    }
  };
}
export {
  w as focusClear,
  R as getFocusStyle
};
//# sourceMappingURL=getFocusStyle.js.map
