{"version":3,"file":"rtlifyRules.js","sources":["../../../../../../node_modules/@fluentui/merge-styles/lib/transforms/rtlifyRules.js"],"sourcesContent":["var _a;\nvar LEFT = 'left';\nvar RIGHT = 'right';\nvar NO_FLIP = '@noflip';\nvar NAME_REPLACEMENTS = (_a = {},\n    _a[LEFT] = RIGHT,\n    _a[RIGHT] = LEFT,\n    _a);\nvar VALUE_REPLACEMENTS = {\n    'w-resize': 'e-resize',\n    'sw-resize': 'se-resize',\n    'nw-resize': 'ne-resize',\n};\n/**\n * RTLifies the rulePair in the array at the current index. This mutates the array for performance\n * reasons.\n */\nexport function rtlifyRules(options, rulePairs, index) {\n    if (options.rtl) {\n        var name_1 = rulePairs[index];\n        if (!name_1) {\n            return;\n        }\n        var value = rulePairs[index + 1];\n        if (typeof value === 'string' && value.indexOf(NO_FLIP) >= 0) {\n            rulePairs[index + 1] = value.replace(/\\s*(?:\\/\\*\\s*)?\\@noflip\\b(?:\\s*\\*\\/)?\\s*?/g, '');\n        }\n        else if (name_1.indexOf(LEFT) >= 0) {\n            rulePairs[index] = name_1.replace(LEFT, RIGHT);\n        }\n        else if (name_1.indexOf(RIGHT) >= 0) {\n            rulePairs[index] = name_1.replace(RIGHT, LEFT);\n        }\n        else if (String(value).indexOf(LEFT) >= 0) {\n            rulePairs[index + 1] = value.replace(LEFT, RIGHT);\n        }\n        else if (String(value).indexOf(RIGHT) >= 0) {\n            rulePairs[index + 1] = value.replace(RIGHT, LEFT);\n        }\n        else if (NAME_REPLACEMENTS[name_1]) {\n            rulePairs[index] = NAME_REPLACEMENTS[name_1];\n        }\n        else if (VALUE_REPLACEMENTS[value]) {\n            rulePairs[index + 1] = VALUE_REPLACEMENTS[value];\n        }\n        else {\n            switch (name_1) {\n                case 'margin':\n                case 'padding':\n                    rulePairs[index + 1] = flipQuad(value);\n                    break;\n                case 'box-shadow':\n                    rulePairs[index + 1] = negateNum(value, 0);\n                    break;\n            }\n        }\n    }\n}\n/**\n * Given a string value in a space delimited format (e.g. \"1 2 3 4\"), negates a particular value.\n */\nfunction negateNum(value, partIndex) {\n    var parts = value.split(' ');\n    var numberVal = parseInt(parts[partIndex], 10);\n    parts[0] = parts[0].replace(String(numberVal), String(numberVal * -1));\n    return parts.join(' ');\n}\n/**\n * Given a string quad, flips the left and right values.\n */\nfunction flipQuad(value) {\n    if (typeof value === 'string') {\n        var parts = value.split(' ');\n        if (parts.length === 4) {\n            return \"\".concat(parts[0], \" \").concat(parts[3], \" \").concat(parts[2], \" \").concat(parts[1]);\n        }\n    }\n    return value;\n}\n//# sourceMappingURL=rtlifyRules.js.map"],"names":["_a","LEFT","RIGHT","NO_FLIP","NAME_REPLACEMENTS","VALUE_REPLACEMENTS","rtlifyRules","options","rulePairs","index","name_1","value","flipQuad","negateNum","partIndex","parts","numberVal"],"mappings":"AAAA,IAAIA,GACAC,IAAO,QACPC,IAAQ,SACRC,IAAU,WACVC,KAAqBJ,IAAK,CAAE,GAC5BA,EAAGC,CAAI,IAAIC,GACXF,EAAGE,CAAK,IAAID,GACZD,IACAK,IAAqB;AAAA,EACrB,YAAY;AAAA,EACZ,aAAa;AAAA,EACb,aAAa;AACjB;AAKO,SAASC,EAAYC,GAASC,GAAWC,GAAO;AACnD,MAAIF,EAAQ,KAAK;AACb,QAAIG,IAASF,EAAUC,CAAK;AAC5B,QAAI,CAACC;AACD;AAEJ,QAAIC,IAAQH,EAAUC,IAAQ,CAAC;AAC/B,QAAI,OAAOE,KAAU,YAAYA,EAAM,QAAQR,CAAO,KAAK;AACvD,MAAAK,EAAUC,IAAQ,CAAC,IAAIE,EAAM,QAAQ,8CAA8C,EAAE;AAAA,aAEhFD,EAAO,QAAQT,CAAI,KAAK;AAC7B,MAAAO,EAAUC,CAAK,IAAIC,EAAO,QAAQT,GAAMC,CAAK;AAAA,aAExCQ,EAAO,QAAQR,CAAK,KAAK;AAC9B,MAAAM,EAAUC,CAAK,IAAIC,EAAO,QAAQR,GAAOD,CAAI;AAAA,aAExC,OAAOU,CAAK,EAAE,QAAQV,CAAI,KAAK;AACpC,MAAAO,EAAUC,IAAQ,CAAC,IAAIE,EAAM,QAAQV,GAAMC,CAAK;AAAA,aAE3C,OAAOS,CAAK,EAAE,QAAQT,CAAK,KAAK;AACrC,MAAAM,EAAUC,IAAQ,CAAC,IAAIE,EAAM,QAAQT,GAAOD,CAAI;AAAA,aAE3CG,EAAkBM,CAAM;AAC7B,MAAAF,EAAUC,CAAK,IAAIL,EAAkBM,CAAM;AAAA,aAEtCL,EAAmBM,CAAK;AAC7B,MAAAH,EAAUC,IAAQ,CAAC,IAAIJ,EAAmBM,CAAK;AAAA;AAG/C,cAAQD,GAAM;AAAA,QACV,KAAK;AAAA,QACL,KAAK;AACD,UAAAF,EAAUC,IAAQ,CAAC,IAAIG,EAASD,CAAK;AACrC;AAAA,QACJ,KAAK;AACD,UAAAH,EAAUC,IAAQ,CAAC,IAAII,EAAUF,GAAO,CAAC;AACzC;AAAA,MACP;AAAA,EAER;AACL;AAIA,SAASE,EAAUF,GAAOG,GAAW;AACjC,MAAIC,IAAQJ,EAAM,MAAM,GAAG,GACvBK,IAAY,SAASD,EAAMD,CAAS,GAAG,EAAE;AAC7C,SAAAC,EAAM,CAAC,IAAIA,EAAM,CAAC,EAAE,QAAQ,OAAOC,CAAS,GAAG,OAAOA,IAAY,EAAE,CAAC,GAC9DD,EAAM,KAAK,GAAG;AACzB;AAIA,SAASH,EAASD,GAAO;AACrB,MAAI,OAAOA,KAAU,UAAU;AAC3B,QAAII,IAAQJ,EAAM,MAAM,GAAG;AAC3B,QAAII,EAAM,WAAW;AACjB,aAAO,GAAG,OAAOA,EAAM,CAAC,GAAG,GAAG,EAAE,OAAOA,EAAM,CAAC,GAAG,GAAG,EAAE,OAAOA,EAAM,CAAC,GAAG,GAAG,EAAE,OAAOA,EAAM,CAAC,CAAC;AAAA,EAElG;AACD,SAAOJ;AACX;","x_google_ignoreList":[0]}