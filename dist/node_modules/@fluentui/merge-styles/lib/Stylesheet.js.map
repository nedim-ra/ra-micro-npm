{"version":3,"file":"Stylesheet.js","sources":["../../../../../node_modules/@fluentui/merge-styles/lib/Stylesheet.js"],"sourcesContent":["import { __assign } from \"tslib\";\nimport { GLOBAL_STYLESHEET_KEY, SHADOW_DOM_STYLESHEET_SETTING } from './shadowConfig';\nexport var InjectionMode = {\n    /**\n     * Avoids style injection, use getRules() to read the styles.\n     */\n    none: 0,\n    /**\n     * Inserts rules using the insertRule api.\n     */\n    insertNode: 1,\n    /**\n     * Appends rules using appendChild.\n     */\n    appendChild: 2,\n};\nexport var STYLESHEET_SETTING = '__stylesheet__';\n/**\n * MSIE 11 doesn't cascade styles based on DOM ordering, but rather on the order that each style node\n * is created. As such, to maintain consistent priority, IE11 should reuse a single style node.\n */\nvar REUSE_STYLE_NODE = typeof navigator !== 'undefined' && /rv:11.0/.test(navigator.userAgent);\nvar _global = {};\n// Grab window.\ntry {\n    // Why the cast?\n    // if compiled/type checked in same program with `@fluentui/font-icons-mdl2` which extends `Window` on global\n    // ( check packages/font-icons-mdl2/src/index.ts ) the definitions don't match! Thus the need of this extra assertion\n    _global = (window || {});\n}\ncatch (_a) {\n    /* leave as blank object */\n}\nvar _stylesheet;\n/**\n * Represents the state of styles registered in the page. Abstracts\n * the surface for adding styles to the stylesheet, exposes helpers\n * for reading the styles registered in server rendered scenarios.\n *\n * @public\n */\nvar Stylesheet = /** @class */ (function () {\n    function Stylesheet(config, serializedStylesheet) {\n        var _a, _b, _c, _d, _e, _f;\n        this._rules = [];\n        this._preservedRules = [];\n        this._counter = 0;\n        this._keyToClassName = {};\n        this._onInsertRuleCallbacks = [];\n        this._onResetCallbacks = [];\n        this._classNameToArgs = {};\n        // If there is no document we won't have an element to inject into.\n        this._config = __assign({ injectionMode: typeof document === 'undefined' ? InjectionMode.none : InjectionMode.insertNode, defaultPrefix: 'css', namespace: undefined, cspSettings: undefined }, config);\n        this._classNameToArgs = (_a = serializedStylesheet === null || serializedStylesheet === void 0 ? void 0 : serializedStylesheet.classNameToArgs) !== null && _a !== void 0 ? _a : this._classNameToArgs;\n        this._counter = (_b = serializedStylesheet === null || serializedStylesheet === void 0 ? void 0 : serializedStylesheet.counter) !== null && _b !== void 0 ? _b : this._counter;\n        this._keyToClassName = (_d = (_c = this._config.classNameCache) !== null && _c !== void 0 ? _c : serializedStylesheet === null || serializedStylesheet === void 0 ? void 0 : serializedStylesheet.keyToClassName) !== null && _d !== void 0 ? _d : this._keyToClassName;\n        this._preservedRules = (_e = serializedStylesheet === null || serializedStylesheet === void 0 ? void 0 : serializedStylesheet.preservedRules) !== null && _e !== void 0 ? _e : this._preservedRules;\n        this._rules = (_f = serializedStylesheet === null || serializedStylesheet === void 0 ? void 0 : serializedStylesheet.rules) !== null && _f !== void 0 ? _f : this._rules;\n    }\n    /**\n     * Gets the singleton instance.\n     */\n    Stylesheet.getInstance = function (shadowConfig) {\n        _stylesheet = _global[STYLESHEET_SETTING];\n        if (_global[SHADOW_DOM_STYLESHEET_SETTING]) {\n            return _global[SHADOW_DOM_STYLESHEET_SETTING].getInstance(shadowConfig);\n        }\n        if (!_stylesheet || (_stylesheet._lastStyleElement && _stylesheet._lastStyleElement.ownerDocument !== document)) {\n            var fabricConfig = (_global === null || _global === void 0 ? void 0 : _global.FabricConfig) || {};\n            var stylesheet = new Stylesheet(fabricConfig.mergeStyles, fabricConfig.serializedStylesheet);\n            _stylesheet = stylesheet;\n            _global[STYLESHEET_SETTING] = stylesheet;\n        }\n        return _stylesheet;\n    };\n    /**\n     * Serializes the Stylesheet instance into a format which allows rehydration on creation.\n     * @returns string representation of `ISerializedStylesheet` interface.\n     */\n    Stylesheet.prototype.serialize = function () {\n        return JSON.stringify({\n            classNameToArgs: this._classNameToArgs,\n            counter: this._counter,\n            keyToClassName: this._keyToClassName,\n            preservedRules: this._preservedRules,\n            rules: this._rules,\n        });\n    };\n    /**\n     * Configures the stylesheet.\n     */\n    Stylesheet.prototype.setConfig = function (config) {\n        this._config = __assign(__assign({}, this._config), config);\n    };\n    /**\n     * Configures a reset callback.\n     *\n     * @param callback - A callback which will be called when the Stylesheet is reset.\n     * @returns function which when called un-registers provided callback.\n     */\n    Stylesheet.prototype.onReset = function (callback) {\n        var _this = this;\n        this._onResetCallbacks.push(callback);\n        return function () {\n            _this._onResetCallbacks = _this._onResetCallbacks.filter(function (cb) { return cb !== callback; });\n        };\n    };\n    /**\n     * Configures an insert rule callback.\n     *\n     * @param callback - A callback which will be called when a rule is inserted.\n     * @returns function which when called un-registers provided callback.\n     */\n    Stylesheet.prototype.onInsertRule = function (callback) {\n        var _this = this;\n        this._onInsertRuleCallbacks.push(callback);\n        return function () {\n            _this._onInsertRuleCallbacks = _this._onInsertRuleCallbacks.filter(function (cb) { return cb !== callback; });\n        };\n    };\n    /**\n     * Generates a unique classname.\n     *\n     * @param displayName - Optional value to use as a prefix.\n     */\n    Stylesheet.prototype.getClassName = function (displayName) {\n        var namespace = this._config.namespace;\n        var prefix = displayName || this._config.defaultPrefix;\n        return \"\".concat(namespace ? namespace + '-' : '').concat(prefix, \"-\").concat(this._counter++);\n    };\n    /**\n     * Used internally to cache information about a class which was\n     * registered with the stylesheet.\n     */\n    Stylesheet.prototype.cacheClassName = function (className, key, args, rules) {\n        this._keyToClassName[this._getCacheKey(key)] = className;\n        this._classNameToArgs[className] = {\n            args: args,\n            rules: rules,\n        };\n    };\n    /**\n     * Gets the appropriate classname given a key which was previously\n     * registered using cacheClassName.\n     */\n    Stylesheet.prototype.classNameFromKey = function (key) {\n        return this._keyToClassName[this._getCacheKey(key)];\n    };\n    /**\n     * Gets all classnames cache with the stylesheet.\n     */\n    Stylesheet.prototype.getClassNameCache = function () {\n        return this._keyToClassName;\n    };\n    /**\n     * Gets the arguments associated with a given classname which was\n     * previously registered using cacheClassName.\n     */\n    Stylesheet.prototype.argsFromClassName = function (className) {\n        var entry = this._classNameToArgs[className];\n        return entry && entry.args;\n    };\n    /**\n     * Gets the rules associated with a given classname which was\n     * previously registered using cacheClassName.\n     */\n    Stylesheet.prototype.insertedRulesFromClassName = function (className) {\n        var entry = this._classNameToArgs[className];\n        return entry && entry.rules;\n    };\n    /**\n     * Inserts a css rule into the stylesheet.\n     * @param preserve - Preserves the rule beyond a reset boundary.\n     */\n    Stylesheet.prototype.insertRule = function (rule, preserve, stylesheetKey) {\n        if (stylesheetKey === void 0) { stylesheetKey = GLOBAL_STYLESHEET_KEY; }\n        var injectionMode = this._config.injectionMode;\n        var element = injectionMode !== InjectionMode.none ? this._getStyleElement() : undefined;\n        if (preserve) {\n            this._preservedRules.push(rule);\n        }\n        if (element) {\n            switch (injectionMode) {\n                case InjectionMode.insertNode:\n                    this._insertRuleIntoSheet(element.sheet, rule);\n                    break;\n                case InjectionMode.appendChild:\n                    element.appendChild(document.createTextNode(rule));\n                    break;\n            }\n        }\n        else {\n            this._rules.push(rule);\n        }\n        // eslint-disable-next-line deprecation/deprecation\n        if (this._config.onInsertRule) {\n            // eslint-disable-next-line deprecation/deprecation\n            this._config.onInsertRule(rule);\n        }\n        this._onInsertRuleCallbacks.forEach(function (callback) {\n            return callback({ key: stylesheetKey, sheet: (element ? element.sheet : undefined), rule: rule });\n        });\n    };\n    /**\n     * Gets all rules registered with the stylesheet; only valid when\n     * using InsertionMode.none.\n     */\n    Stylesheet.prototype.getRules = function (includePreservedRules) {\n        return (includePreservedRules ? this._preservedRules.join('') : '') + this._rules.join('');\n    };\n    /**\n     * Resets the internal state of the stylesheet. Only used in server\n     * rendered scenarios where we're using InsertionMode.none.\n     */\n    Stylesheet.prototype.reset = function () {\n        this._rules = [];\n        this._counter = 0;\n        this._classNameToArgs = {};\n        this._keyToClassName = {};\n        this._onResetCallbacks.forEach(function (callback) { return callback(); });\n    };\n    // Forces the regeneration of incoming styles without totally resetting the stylesheet.\n    Stylesheet.prototype.resetKeys = function () {\n        this._keyToClassName = {};\n    };\n    Stylesheet.prototype._createStyleElement = function () {\n        var _a;\n        var doc = ((_a = this._config.window) === null || _a === void 0 ? void 0 : _a.document) || document;\n        var head = doc.head;\n        var styleElement = doc.createElement('style');\n        var nodeToInsertBefore = null;\n        styleElement.setAttribute('data-merge-styles', 'true');\n        var cspSettings = this._config.cspSettings;\n        if (cspSettings) {\n            if (cspSettings.nonce) {\n                styleElement.setAttribute('nonce', cspSettings.nonce);\n            }\n        }\n        if (this._lastStyleElement) {\n            // If the `nextElementSibling` is null, then the insertBefore will act as a regular append.\n            // https://developer.mozilla.org/en-US/docs/Web/API/Node/insertBefore#Syntax\n            nodeToInsertBefore = this._lastStyleElement.nextElementSibling;\n        }\n        else {\n            var placeholderStyleTag = this._findPlaceholderStyleTag();\n            if (placeholderStyleTag) {\n                nodeToInsertBefore = placeholderStyleTag.nextElementSibling;\n            }\n            else {\n                nodeToInsertBefore = head.childNodes[0];\n            }\n        }\n        head.insertBefore(styleElement, head.contains(nodeToInsertBefore) ? nodeToInsertBefore : null);\n        this._lastStyleElement = styleElement;\n        return styleElement;\n    };\n    Stylesheet.prototype._insertRuleIntoSheet = function (sheet, rule) {\n        if (!sheet) {\n            return false;\n        }\n        try {\n            sheet.insertRule(rule, sheet.cssRules.length);\n            return true;\n        }\n        catch (e) {\n            // The browser will throw exceptions on unsupported rules (such as a moz prefix in webkit.)\n            // We need to swallow the exceptions for this scenario, otherwise we'd need to filter\n            // which could be slower and bulkier.\n        }\n        return false;\n    };\n    Stylesheet.prototype._getCacheKey = function (key) {\n        return key;\n    };\n    Stylesheet.prototype._getStyleElement = function () {\n        var _this = this;\n        if (!this._styleElement) {\n            this._styleElement = this._createStyleElement();\n            if (!REUSE_STYLE_NODE) {\n                // Reset the style element on the next frame.\n                var win = this._config.window || window;\n                win.requestAnimationFrame(function () {\n                    _this._styleElement = undefined;\n                });\n            }\n        }\n        return this._styleElement;\n    };\n    Stylesheet.prototype._findPlaceholderStyleTag = function () {\n        var head = document.head;\n        if (head) {\n            return head.querySelector('style[data-merge-styles]');\n        }\n        return null;\n    };\n    return Stylesheet;\n}());\nexport { Stylesheet };\n//# sourceMappingURL=Stylesheet.js.map"],"names":["InjectionMode","STYLESHEET_SETTING","REUSE_STYLE_NODE","_global","_stylesheet","Stylesheet","config","serializedStylesheet","_a","_b","_c","_d","_e","_f","__assign","shadowConfig","SHADOW_DOM_STYLESHEET_SETTING","fabricConfig","stylesheet","callback","_this","cb","displayName","namespace","prefix","className","key","args","rules","entry","rule","preserve","stylesheetKey","GLOBAL_STYLESHEET_KEY","injectionMode","element","includePreservedRules","doc","head","styleElement","nodeToInsertBefore","cspSettings","placeholderStyleTag","sheet","win"],"mappings":"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","x_google_ignoreList":[0]}