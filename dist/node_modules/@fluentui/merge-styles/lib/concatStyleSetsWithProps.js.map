{"version":3,"file":"concatStyleSetsWithProps.js","sources":["../../../../../node_modules/@fluentui/merge-styles/lib/concatStyleSetsWithProps.js"],"sourcesContent":["import { concatStyleSets } from './concatStyleSets';\n/**\n * Concatenates style sets into one, but resolves functional sets using the given props.\n * @param styleProps - Props used to resolve functional sets.\n * @param allStyles - Style sets, which can be functions or objects.\n */\nexport function concatStyleSetsWithProps(styleProps) {\n    var allStyles = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        allStyles[_i - 1] = arguments[_i];\n    }\n    var result = [];\n    for (var _a = 0, allStyles_1 = allStyles; _a < allStyles_1.length; _a++) {\n        var styles = allStyles_1[_a];\n        if (styles) {\n            result.push(typeof styles === 'function' ? styles(styleProps) : styles);\n        }\n    }\n    if (result.length === 1) {\n        return result[0];\n    }\n    else if (result.length) {\n        // cliffkoh: I cannot figure out how to avoid the cast to any here.\n        // It is something to do with the use of Omit in IStyleSet.\n        // It might not be necessary once  Omit becomes part of lib.d.ts (when we remove our own Omit and rely on\n        // the official version).\n        return concatStyleSets.apply(void 0, result);\n    }\n    return {};\n}\n//# sourceMappingURL=concatStyleSetsWithProps.js.map"],"names":["concatStyleSetsWithProps","styleProps","allStyles","_i","result","_a","allStyles_1","styles","concatStyleSets"],"mappings":";AAMO,SAASA,EAAyBC,GAAY;AAEjD,WADIC,IAAY,CAAA,GACPC,IAAK,GAAGA,IAAK,UAAU,QAAQA;AACpC,IAAAD,EAAUC,IAAK,CAAC,IAAI,UAAUA,CAAE;AAGpC,WADIC,IAAS,CAAA,GACJC,IAAK,GAAGC,IAAcJ,GAAWG,IAAKC,EAAY,QAAQD,KAAM;AACrE,QAAIE,IAASD,EAAYD,CAAE;AAC3B,IAAIE,KACAH,EAAO,KAAK,OAAOG,KAAW,aAAaA,EAAON,CAAU,IAAIM,CAAM;AAAA,EAE7E;AACD,SAAIH,EAAO,WAAW,IACXA,EAAO,CAAC,IAEVA,EAAO,SAKLI,EAAgB,MAAM,QAAQJ,CAAM,IAExC;AACX;","x_google_ignoreList":[0]}