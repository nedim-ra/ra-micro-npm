import { __spreadArray as N } from "../../../tslib/tslib.es6.js";
import { Stylesheet as y } from "./Stylesheet.js";
import { kebabRules as p } from "./transforms/kebabRules.js";
import { prefixRules as I } from "./transforms/prefixRules.js";
import { provideUnits as R } from "./transforms/provideUnits.js";
import { rtlifyRules as C } from "./transforms/rtlifyRules.js";
import { tokenizeWithParentheses as P } from "./tokenizeWithParentheses.js";
var b = "displayName";
function k(a) {
  var n = a && a["&"];
  return n ? n.displayName : void 0;
}
var O = /\:global\((.+?)\)/g;
function A(a) {
  if (!O.test(a))
    return a;
  for (var n = [], i = /\:global\((.+?)\)/g, f = null; f = i.exec(a); )
    f[1].indexOf(",") > -1 && n.push([
      f.index,
      f.index + f[0].length,
      // Wrap each of the found selectors in :global()
      f[1].split(",").map(function(r) {
        return ":global(".concat(r.trim(), ")");
      }).join(", ")
    ]);
  return n.reverse().reduce(function(r, v) {
    var e = v[0], d = v[1], m = v[2], t = r.slice(0, e), s = r.slice(d);
    return t + m + s;
  }, a);
}
function T(a) {
  return a.indexOf(":global(") >= 0 || a.indexOf(":") === 0;
}
function u(a, n) {
  return a.indexOf(":global(") >= 0 ? a.replace(O, "$1") : a.indexOf(":host(") === 0 ? a : a.indexOf(":") === 0 ? n + a : a.indexOf("&") < 0 ? n + " " + a : a;
}
function x(a, n, i, f, r) {
  n === void 0 && (n = { __order: [] }), i.indexOf("@") === 0 ? (i = i + "{" + a, h([f], n, i, r)) : i.indexOf(",") > -1 ? A(i).split(",").map(function(v) {
    return v.trim();
  }).forEach(function(v) {
    return h([f], n, u(v, a), r);
  }) : h([f], n, u(i, a), r);
}
function h(a, n, i, f) {
  n === void 0 && (n = { __order: [] }), i === void 0 && (i = "&");
  var r = n[i];
  r || (r = {}, n[i] = r, n.__order.push(i));
  for (var v = 0, e = a; v < e.length; v++) {
    var d = e[v];
    if (typeof d == "string") {
      var m = f.argsFromClassName(d);
      m && h(m, n, i, f);
    } else if (Array.isArray(d))
      h(d, n, i, f);
    else
      for (var t in d)
        if (d.hasOwnProperty(t)) {
          var s = d[t];
          if (t === "selectors") {
            var g = d.selectors;
            for (var o in g)
              g.hasOwnProperty(o) && x(i, n, o, g[o], f);
          } else typeof s == "object" || T(t) ? s != null && x(i, n, t, s, f) : s !== void 0 && (t === "margin" || t === "padding" ? j(r, t, s) : r[t] = s);
        }
  }
  return n;
}
function j(a, n, i) {
  var f = typeof i == "string" ? P(i) : [i];
  f.length === 0 && f.push(i), f[f.length - 1] === "!important" && (f = f.slice(0, -1).map(function(r) {
    return r + " !important";
  })), a[n + "Top"] = f[0], a[n + "Right"] = f[1] || f[0], a[n + "Bottom"] = f[2] || f[0], a[n + "Left"] = f[3] || f[1] || f[0];
}
function c(a, n) {
  for (var i = [a.rtl ? "rtl" : "ltr"], f = !1, r = 0, v = n.__order; r < v.length; r++) {
    var e = v[r];
    i.push(e);
    var d = n[e];
    for (var m in d)
      d.hasOwnProperty(m) && d[m] !== void 0 && (f = !0, i.push(m, d[m]));
  }
  return f ? i.join("") : void 0;
}
function l(a, n) {
  return n <= 0 ? "" : n === 1 ? a : a + l(a, n - 1);
}
function z(a, n) {
  if (!n)
    return "";
  var i = [];
  for (var f in n)
    n.hasOwnProperty(f) && f !== b && n[f] !== void 0 && i.push(f, n[f]);
  for (var r = 0; r < i.length; r += 2)
    p(i, r), R(i, r), C(a, i, r), I(i, r);
  for (var r = 1; r < i.length; r += 4)
    i.splice(r, 1, ":", i[r], ";");
  return i.join("");
}
function D(a) {
  for (var n, i = [], f = 1; f < arguments.length; f++)
    i[f - 1] = arguments[f];
  var r = (n = a.stylesheet) !== null && n !== void 0 ? n : y.getInstance(a.shadowConfig), v = h(i, void 0, void 0, r), e = c(a, v);
  if (e) {
    var d = {
      className: r.classNameFromKey(e),
      key: e,
      args: i
    };
    if (!d.className) {
      d.className = r.getClassName(k(v));
      for (var m = [], t = 0, s = v.__order; t < s.length; t++) {
        var g = s[t];
        m.push(g, z(a, v[g]));
      }
      d.rulesToInsert = m;
    }
    return d;
  }
}
function E(a, n, i, f) {
  n === void 0 && (n = 1);
  var r = f ?? y.getInstance(i), v = a.className, e = a.key, d = a.args, m = a.rulesToInsert;
  if (m) {
    for (var t = 0; t < m.length; t += 2) {
      var s = m[t + 1];
      if (s) {
        var g = m[t];
        g = g.replace(/&/g, l(".".concat(a.className), n));
        var o = "".concat(g, "{").concat(s, "}").concat(g.indexOf("@") === 0 ? "}" : "");
        r.insertRule(o);
      }
    }
    r.cacheClassName(v, e, d, m);
  }
}
function q(a) {
  for (var n = [], i = 1; i < arguments.length; i++)
    n[i - 1] = arguments[i];
  var f = D.apply(void 0, N([a], n, !1));
  return f ? (E(f, a.specificityMultiplier, a.shadowConfig, a.stylesheet), f.className) : "";
}
export {
  E as applyRegistration,
  z as serializeRuleEntries,
  q as styleToClassName,
  D as styleToRegistration
};
//# sourceMappingURL=styleToClassName.js.map
