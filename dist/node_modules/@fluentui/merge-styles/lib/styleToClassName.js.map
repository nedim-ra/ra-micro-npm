{"version":3,"file":"styleToClassName.js","sources":["../../../../../node_modules/@fluentui/merge-styles/lib/styleToClassName.js"],"sourcesContent":["import { __spreadArray } from \"tslib\";\nimport { Stylesheet } from './Stylesheet';\nimport { kebabRules } from './transforms/kebabRules';\nimport { prefixRules } from './transforms/prefixRules';\nimport { provideUnits } from './transforms/provideUnits';\nimport { rtlifyRules } from './transforms/rtlifyRules';\nimport { tokenizeWithParentheses } from './tokenizeWithParentheses';\nvar DISPLAY_NAME = 'displayName';\nfunction getDisplayName(rules) {\n    var rootStyle = rules && rules['&'];\n    return rootStyle ? rootStyle.displayName : undefined;\n}\nvar globalSelectorRegExp = /\\:global\\((.+?)\\)/g;\n/**\n * Finds comma separated selectors in a :global() e.g. \":global(.class1, .class2, .class3)\"\n * and wraps them each in their own global \":global(.class1), :global(.class2), :global(.class3)\"\n *\n * @param selectorWithGlobals The selector to process\n * @returns The updated selector\n */\nfunction expandCommaSeparatedGlobals(selectorWithGlobals) {\n    // We the selector does not have a :global() we can shortcut\n    if (!globalSelectorRegExp.test(selectorWithGlobals)) {\n        return selectorWithGlobals;\n    }\n    var replacementInfo = [];\n    var findGlobal = /\\:global\\((.+?)\\)/g;\n    var match = null;\n    // Create a result list for global selectors so we can replace them.\n    while ((match = findGlobal.exec(selectorWithGlobals))) {\n        // Only if the found selector is a comma separated list we'll process it.\n        if (match[1].indexOf(',') > -1) {\n            replacementInfo.push([\n                match.index,\n                match.index + match[0].length,\n                // Wrap each of the found selectors in :global()\n                match[1]\n                    .split(',')\n                    .map(function (v) { return \":global(\".concat(v.trim(), \")\"); })\n                    .join(', '),\n            ]);\n        }\n    }\n    // Replace the found selectors with their wrapped variants in reverse order\n    return replacementInfo\n        .reverse()\n        .reduce(function (selector, _a) {\n        var matchIndex = _a[0], matchEndIndex = _a[1], replacement = _a[2];\n        var prefix = selector.slice(0, matchIndex);\n        var suffix = selector.slice(matchEndIndex);\n        return prefix + replacement + suffix;\n    }, selectorWithGlobals);\n}\nfunction isSelector(potentialSelector) {\n    return potentialSelector.indexOf(':global(') >= 0 || potentialSelector.indexOf(':') === 0;\n}\nfunction expandSelector(newSelector, currentSelector) {\n    if (newSelector.indexOf(':global(') >= 0) {\n        return newSelector.replace(globalSelectorRegExp, '$1');\n    }\n    else if (newSelector.indexOf(':host(') === 0) {\n        return newSelector;\n    }\n    else if (newSelector.indexOf(':') === 0) {\n        return currentSelector + newSelector;\n    }\n    else if (newSelector.indexOf('&') < 0) {\n        return currentSelector + ' ' + newSelector;\n    }\n    return newSelector;\n}\nfunction extractSelector(currentSelector, rules, selector, value, stylesheet) {\n    if (rules === void 0) { rules = { __order: [] }; }\n    if (selector.indexOf('@') === 0) {\n        selector = selector + '{' + currentSelector;\n        extractRules([value], rules, selector, stylesheet);\n    }\n    else if (selector.indexOf(',') > -1) {\n        expandCommaSeparatedGlobals(selector)\n            .split(',')\n            .map(function (s) { return s.trim(); })\n            .forEach(function (separatedSelector) {\n            return extractRules([value], rules, expandSelector(separatedSelector, currentSelector), stylesheet);\n        });\n    }\n    else {\n        extractRules([value], rules, expandSelector(selector, currentSelector), stylesheet);\n    }\n}\nfunction extractRules(args, rules, currentSelector, stylesheet) {\n    if (rules === void 0) { rules = { __order: [] }; }\n    if (currentSelector === void 0) { currentSelector = '&'; }\n    var currentRules = rules[currentSelector];\n    if (!currentRules) {\n        currentRules = {};\n        rules[currentSelector] = currentRules;\n        rules.__order.push(currentSelector);\n    }\n    for (var _i = 0, args_1 = args; _i < args_1.length; _i++) {\n        var arg = args_1[_i];\n        // If the arg is a string, we need to look up the class map and merge.\n        if (typeof arg === 'string') {\n            var expandedRules = stylesheet.argsFromClassName(arg);\n            if (expandedRules) {\n                extractRules(expandedRules, rules, currentSelector, stylesheet);\n            }\n            // Else if the arg is an array, we need to recurse in.\n        }\n        else if (Array.isArray(arg)) {\n            extractRules(arg, rules, currentSelector, stylesheet);\n        }\n        else {\n            for (var prop in arg) {\n                if (arg.hasOwnProperty(prop)) {\n                    var propValue = arg[prop];\n                    if (prop === 'selectors') {\n                        // every child is a selector.\n                        var selectors = arg.selectors;\n                        for (var newSelector in selectors) {\n                            if (selectors.hasOwnProperty(newSelector)) {\n                                extractSelector(currentSelector, rules, newSelector, selectors[newSelector], stylesheet);\n                            }\n                        }\n                    }\n                    else if (typeof propValue === 'object' || isSelector(prop)) {\n                        // prop is a selector.\n                        if (propValue !== null && propValue !== undefined) {\n                            extractSelector(currentSelector, rules, prop, propValue, stylesheet);\n                        }\n                    }\n                    else {\n                        if (propValue !== undefined) {\n                            // Else, add the rule to the currentSelector.\n                            if (prop === 'margin' || prop === 'padding') {\n                                expandQuads(currentRules, prop, propValue);\n                            }\n                            else {\n                                currentRules[prop] = propValue;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return rules;\n}\nfunction expandQuads(currentRules, name, value) {\n    var parts = typeof value === 'string' ? tokenizeWithParentheses(value) : [value];\n    if (parts.length === 0) {\n        parts.push(value);\n    }\n    if (parts[parts.length - 1] === '!important') {\n        // Remove !important from parts, and append it to each part individually\n        parts = parts.slice(0, -1).map(function (p) { return p + ' !important'; });\n    }\n    currentRules[name + 'Top'] = parts[0];\n    currentRules[name + 'Right'] = parts[1] || parts[0];\n    currentRules[name + 'Bottom'] = parts[2] || parts[0];\n    currentRules[name + 'Left'] = parts[3] || parts[1] || parts[0];\n}\nfunction getKeyForRules(options, rules) {\n    var serialized = [options.rtl ? 'rtl' : 'ltr'];\n    var hasProps = false;\n    for (var _i = 0, _a = rules.__order; _i < _a.length; _i++) {\n        var selector = _a[_i];\n        serialized.push(selector);\n        var rulesForSelector = rules[selector];\n        for (var propName in rulesForSelector) {\n            if (rulesForSelector.hasOwnProperty(propName) && rulesForSelector[propName] !== undefined) {\n                hasProps = true;\n                serialized.push(propName, rulesForSelector[propName]);\n            }\n        }\n    }\n    return hasProps ? serialized.join('') : undefined;\n}\nfunction repeatString(target, count) {\n    if (count <= 0) {\n        return '';\n    }\n    if (count === 1) {\n        return target;\n    }\n    return target + repeatString(target, count - 1);\n}\nexport function serializeRuleEntries(options, ruleEntries) {\n    if (!ruleEntries) {\n        return '';\n    }\n    var allEntries = [];\n    for (var entry in ruleEntries) {\n        if (ruleEntries.hasOwnProperty(entry) && entry !== DISPLAY_NAME && ruleEntries[entry] !== undefined) {\n            allEntries.push(entry, ruleEntries[entry]);\n        }\n    }\n    // Apply transforms.\n    for (var i = 0; i < allEntries.length; i += 2) {\n        kebabRules(allEntries, i);\n        provideUnits(allEntries, i);\n        rtlifyRules(options, allEntries, i);\n        prefixRules(allEntries, i);\n    }\n    // Apply punctuation.\n    for (var i = 1; i < allEntries.length; i += 4) {\n        allEntries.splice(i, 1, ':', allEntries[i], ';');\n    }\n    return allEntries.join('');\n}\nexport function styleToRegistration(options) {\n    var _a;\n    var args = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        args[_i - 1] = arguments[_i];\n    }\n    var stylesheet = (_a = options.stylesheet) !== null && _a !== void 0 ? _a : Stylesheet.getInstance(options.shadowConfig);\n    var rules = extractRules(args, undefined, undefined, stylesheet);\n    var key = getKeyForRules(options, rules);\n    if (key) {\n        var registration = {\n            className: stylesheet.classNameFromKey(key),\n            key: key,\n            args: args,\n        };\n        if (!registration.className) {\n            registration.className = stylesheet.getClassName(getDisplayName(rules));\n            var rulesToInsert = [];\n            for (var _b = 0, _c = rules.__order; _b < _c.length; _b++) {\n                var selector = _c[_b];\n                rulesToInsert.push(selector, serializeRuleEntries(options, rules[selector]));\n            }\n            registration.rulesToInsert = rulesToInsert;\n        }\n        return registration;\n    }\n    return undefined;\n}\n/**\n * Insert style to stylesheet.\n * @param registration Style registration.\n * @param specificityMultiplier Number of times classname selector is repeated in the css rule.\n * This is to increase css specificity in case it's needed. Default to 1.\n */\nexport function applyRegistration(registration, specificityMultiplier, shadowConfig, sheet) {\n    if (specificityMultiplier === void 0) { specificityMultiplier = 1; }\n    var stylesheet = sheet !== null && sheet !== void 0 ? sheet : Stylesheet.getInstance(shadowConfig);\n    var className = registration.className, key = registration.key, args = registration.args, rulesToInsert = registration.rulesToInsert;\n    if (rulesToInsert) {\n        // rulesToInsert is an ordered array of selector/rule pairs.\n        for (var i = 0; i < rulesToInsert.length; i += 2) {\n            var rules = rulesToInsert[i + 1];\n            if (rules) {\n                var selector = rulesToInsert[i];\n                selector = selector.replace(/&/g, repeatString(\".\".concat(registration.className), specificityMultiplier));\n                // Insert. Note if a media query, we must close the query with a final bracket.\n                var processedRule = \"\".concat(selector, \"{\").concat(rules, \"}\").concat(selector.indexOf('@') === 0 ? '}' : '');\n                stylesheet.insertRule(processedRule);\n            }\n        }\n        stylesheet.cacheClassName(className, key, args, rulesToInsert);\n    }\n}\nexport function styleToClassName(options) {\n    var args = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        args[_i - 1] = arguments[_i];\n    }\n    var registration = styleToRegistration.apply(void 0, __spreadArray([options], args, false));\n    if (registration) {\n        applyRegistration(registration, options.specificityMultiplier, options.shadowConfig, options.stylesheet);\n        return registration.className;\n    }\n    return '';\n}\n//# sourceMappingURL=styleToClassName.js.map"],"names":["DISPLAY_NAME","getDisplayName","rules","rootStyle","globalSelectorRegExp","expandCommaSeparatedGlobals","selectorWithGlobals","replacementInfo","findGlobal","match","v","selector","_a","matchIndex","matchEndIndex","replacement","prefix","suffix","isSelector","potentialSelector","expandSelector","newSelector","currentSelector","extractSelector","value","stylesheet","extractRules","s","separatedSelector","args","currentRules","_i","args_1","arg","expandedRules","prop","propValue","selectors","expandQuads","name","parts","tokenizeWithParentheses","p","getKeyForRules","options","serialized","hasProps","rulesForSelector","propName","repeatString","target","count","serializeRuleEntries","ruleEntries","allEntries","entry","i","kebabRules","provideUnits","rtlifyRules","prefixRules","styleToRegistration","Stylesheet","key","registration","rulesToInsert","_b","_c","applyRegistration","specificityMultiplier","shadowConfig","sheet","className","processedRule","styleToClassName","__spreadArray"],"mappings":"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","x_google_ignoreList":[0]}