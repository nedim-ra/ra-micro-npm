{"version":3,"file":"concatStyleSets.js","sources":["../../../../../node_modules/@fluentui/merge-styles/lib/concatStyleSets.js"],"sourcesContent":["import { __spreadArray } from \"tslib\";\nimport { isShadowConfig } from './shadowConfig';\n/**\n * Combine a set of styles together (but does not register css classes).\n * @param styleSets - One or more stylesets to be merged (each param can also be falsy).\n */\nexport function concatStyleSets() {\n    var styleSets = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        styleSets[_i] = arguments[_i];\n    }\n    if (styleSets &&\n        styleSets.length === 1 &&\n        styleSets[0] &&\n        !styleSets[0].subComponentStyles &&\n        !isShadowConfig(styleSets[0])) {\n        return styleSets[0];\n    }\n    var mergedSet = {};\n    // We process sub component styles in two phases. First we collect them, then we combine them into 1 style function.\n    var workingSubcomponentStyles = {};\n    for (var _a = 0, styleSets_1 = styleSets; _a < styleSets_1.length; _a++) {\n        var currentSet = styleSets_1[_a];\n        if (currentSet && !isShadowConfig(currentSet)) {\n            for (var prop in currentSet) {\n                if (currentSet.hasOwnProperty(prop)) {\n                    if (prop === 'subComponentStyles' && currentSet.subComponentStyles !== undefined) {\n                        // subcomponent styles - style functions or objects\n                        var currentComponentStyles = currentSet.subComponentStyles;\n                        for (var subCompProp in currentComponentStyles) {\n                            if (currentComponentStyles.hasOwnProperty(subCompProp)) {\n                                if (workingSubcomponentStyles.hasOwnProperty(subCompProp)) {\n                                    workingSubcomponentStyles[subCompProp].push(currentComponentStyles[subCompProp]);\n                                }\n                                else {\n                                    workingSubcomponentStyles[subCompProp] = [currentComponentStyles[subCompProp]];\n                                }\n                            }\n                        }\n                        continue;\n                    }\n                    // the as any casts below is a workaround for ts 2.8.\n                    // todo: remove cast to any in ts 2.9.\n                    var mergedValue = mergedSet[prop];\n                    var currentValue = currentSet[prop];\n                    if (mergedValue === undefined) {\n                        mergedSet[prop] = currentValue;\n                    }\n                    else {\n                        mergedSet[prop] = __spreadArray(__spreadArray([], (Array.isArray(mergedValue) ? mergedValue : [mergedValue]), true), (Array.isArray(currentValue) ? currentValue : [currentValue]), true);\n                    }\n                }\n            }\n        }\n    }\n    if (Object.keys(workingSubcomponentStyles).length > 0) {\n        mergedSet.subComponentStyles = {};\n        var mergedSubStyles = mergedSet.subComponentStyles;\n        var _loop_1 = function (subCompProp) {\n            if (workingSubcomponentStyles.hasOwnProperty(subCompProp)) {\n                var workingSet_1 = workingSubcomponentStyles[subCompProp];\n                mergedSubStyles[subCompProp] = function (styleProps) {\n                    return concatStyleSets.apply(void 0, workingSet_1.map(function (styleFunctionOrObject) {\n                        return typeof styleFunctionOrObject === 'function' ? styleFunctionOrObject(styleProps) : styleFunctionOrObject;\n                    }));\n                };\n            }\n        };\n        // now we process the subcomponent styles if there are any\n        for (var subCompProp in workingSubcomponentStyles) {\n            _loop_1(subCompProp);\n        }\n    }\n    return mergedSet;\n}\n//# sourceMappingURL=concatStyleSets.js.map"],"names":["concatStyleSets","styleSets","_i","isShadowConfig","mergedSet","workingSubcomponentStyles","_a","styleSets_1","currentSet","prop","currentComponentStyles","subCompProp","mergedValue","currentValue","__spreadArray","mergedSubStyles","_loop_1","workingSet_1","styleProps","styleFunctionOrObject"],"mappings":";;AAMO,SAASA,IAAkB;AAE9B,WADIC,IAAY,CAAA,GACPC,IAAK,GAAGA,IAAK,UAAU,QAAQA;AACpC,IAAAD,EAAUC,CAAE,IAAI,UAAUA,CAAE;AAEhC,MAAID,KACAA,EAAU,WAAW,KACrBA,EAAU,CAAC,KACX,CAACA,EAAU,CAAC,EAAE,sBACd,CAACE,EAAeF,EAAU,CAAC,CAAC;AAC5B,WAAOA,EAAU,CAAC;AAKtB,WAHIG,IAAY,CAAA,GAEZC,IAA4B,CAAA,GACvBC,IAAK,GAAGC,IAAcN,GAAWK,IAAKC,EAAY,QAAQD,KAAM;AACrE,QAAIE,IAAaD,EAAYD,CAAE;AAC/B,QAAIE,KAAc,CAACL,EAAeK,CAAU;AACxC,eAASC,KAAQD;AACb,YAAIA,EAAW,eAAeC,CAAI,GAAG;AACjC,cAAIA,MAAS,wBAAwBD,EAAW,uBAAuB,QAAW;AAE9E,gBAAIE,IAAyBF,EAAW;AACxC,qBAASG,KAAeD;AACpB,cAAIA,EAAuB,eAAeC,CAAW,MAC7CN,EAA0B,eAAeM,CAAW,IACpDN,EAA0BM,CAAW,EAAE,KAAKD,EAAuBC,CAAW,CAAC,IAG/EN,EAA0BM,CAAW,IAAI,CAACD,EAAuBC,CAAW,CAAC;AAIzF;AAAA,UACH;AAGD,cAAIC,IAAcR,EAAUK,CAAI,GAC5BI,IAAeL,EAAWC,CAAI;AAClC,UAAIG,MAAgB,SAChBR,EAAUK,CAAI,IAAII,IAGlBT,EAAUK,CAAI,IAAIK,EAAcA,EAAc,IAAK,MAAM,QAAQF,CAAW,IAAIA,IAAc,CAACA,CAAW,GAAI,EAAI,GAAI,MAAM,QAAQC,CAAY,IAAIA,IAAe,CAACA,CAAY,GAAI,EAAI;AAAA,QAE/L;AAAA;AAAA,EAGZ;AACD,MAAI,OAAO,KAAKR,CAAyB,EAAE,SAAS,GAAG;AACnD,IAAAD,EAAU,qBAAqB;AAC/B,QAAIW,IAAkBX,EAAU,oBAC5BY,IAAU,SAAUL,GAAa;AACjC,UAAIN,EAA0B,eAAeM,CAAW,GAAG;AACvD,YAAIM,IAAeZ,EAA0BM,CAAW;AACxD,QAAAI,EAAgBJ,CAAW,IAAI,SAAUO,GAAY;AACjD,iBAAOlB,EAAgB,MAAM,QAAQiB,EAAa,IAAI,SAAUE,GAAuB;AACnF,mBAAO,OAAOA,KAA0B,aAAaA,EAAsBD,CAAU,IAAIC;AAAA,UAC5F,CAAA,CAAC;AAAA,QACtB;AAAA,MACa;AAAA,IACb;AAEQ,aAASR,KAAeN;AACpB,MAAAW,EAAQL,CAAW;AAAA,EAE1B;AACD,SAAOP;AACX;","x_google_ignoreList":[0]}