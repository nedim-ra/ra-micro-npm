{"version":3,"file":"mergeStyleSets.js","sources":["../../../../../node_modules/@fluentui/merge-styles/lib/mergeStyleSets.js"],"sourcesContent":["import { __assign } from \"tslib\";\nimport { concatStyleSets } from './concatStyleSets';\nimport { extractStyleParts } from './extractStyleParts';\nimport { getStyleOptions } from './StyleOptionsState';\nimport { applyRegistration, styleToRegistration } from './styleToClassName';\nimport { isShadowConfig } from './shadowConfig';\nimport { Stylesheet } from './Stylesheet';\n/**\n * Takes in one or more style set objects, each consisting of a set of areas,\n * each which will produce a class name. Using this is analogous to calling\n * `mergeStyles` for each property in the object, but ensures we maintain the\n * set ordering when multiple style sets are merged.\n *\n * @param styleSets - One or more style sets to be merged.\n */\nexport function mergeStyleSets() {\n    var styleSets = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        styleSets[_i] = arguments[_i];\n    }\n    return mergeCssSets(styleSets, getStyleOptions());\n}\n/**\n * Takes in one or more style set objects, each1consisting of a set of areas,\n * each which will produce a class name. Using this is analogous to calling\n * `mergeCss` for each property in the object, but ensures the\n * set ordering when multiple style sets are merged.\n *\n * @param styleSets - One or more style sets to be merged.\n * @param options - (optional) Options to use when creating rules.\n */\nexport function mergeCssSets(styleSets, options) {\n    var classNameSet = { subComponentStyles: {} };\n    var shadowConfig = undefined;\n    var styleSet;\n    if (isShadowConfig(styleSets[0])) {\n        shadowConfig = styleSets[0];\n        styleSet = styleSets[1];\n    }\n    else {\n        styleSet = styleSets[0];\n    }\n    shadowConfig !== null && shadowConfig !== void 0 ? shadowConfig : (shadowConfig = options === null || options === void 0 ? void 0 : options.shadowConfig);\n    var opts = __assign(__assign({}, options), { shadowConfig: shadowConfig });\n    if (!styleSet && styleSets.length <= 1) {\n        return { subComponentStyles: {} };\n    }\n    var sheet = Stylesheet.getInstance(shadowConfig);\n    opts.stylesheet = sheet;\n    var concatenatedStyleSet = concatStyleSets.apply(void 0, styleSets);\n    var registrations = [];\n    for (var styleSetArea in concatenatedStyleSet) {\n        if (concatenatedStyleSet.hasOwnProperty(styleSetArea)) {\n            if (styleSetArea === 'subComponentStyles') {\n                classNameSet.subComponentStyles = concatenatedStyleSet.subComponentStyles || {};\n                continue;\n            }\n            else if (styleSetArea === '__shadowConfig__') {\n                continue;\n            }\n            var styles = concatenatedStyleSet[styleSetArea];\n            var _a = extractStyleParts(sheet, styles), classes = _a.classes, objects = _a.objects;\n            if (objects === null || objects === void 0 ? void 0 : objects.length) {\n                var registration = styleToRegistration(opts || {}, { displayName: styleSetArea }, objects);\n                if (registration) {\n                    registrations.push(registration);\n                    classNameSet[styleSetArea] = classes.concat([registration.className]).join(' ');\n                }\n            }\n            else {\n                classNameSet[styleSetArea] = classes.join(' ');\n            }\n        }\n    }\n    for (var _i = 0, registrations_1 = registrations; _i < registrations_1.length; _i++) {\n        var registration = registrations_1[_i];\n        if (registration) {\n            applyRegistration(registration, options === null || options === void 0 ? void 0 : options.specificityMultiplier, shadowConfig);\n        }\n    }\n    return classNameSet;\n}\n//# sourceMappingURL=mergeStyleSets.js.map"],"names":["mergeStyleSets","styleSets","_i","mergeCssSets","getStyleOptions","options","classNameSet","shadowConfig","styleSet","isShadowConfig","opts","__assign","sheet","Stylesheet","concatenatedStyleSet","concatStyleSets","registrations","styleSetArea","styles","_a","extractStyleParts","classes","objects","registration","styleToRegistration","registrations_1","applyRegistration"],"mappings":";;;;;;;AAeO,SAASA,IAAiB;AAE7B,WADIC,IAAY,CAAA,GACPC,IAAK,GAAGA,IAAK,UAAU,QAAQA;AACpC,IAAAD,EAAUC,CAAE,IAAI,UAAUA,CAAE;AAEhC,SAAOC,EAAaF,GAAWG,EAAe,CAAE;AACpD;AAUO,SAASD,EAAaF,GAAWI,GAAS;AAC7C,MAAIC,IAAe,EAAE,oBAAoB,CAAA,KACrCC,IAAe,QACfC;AACJ,EAAIC,EAAeR,EAAU,CAAC,CAAC,KAC3BM,IAAeN,EAAU,CAAC,GAC1BO,IAAWP,EAAU,CAAC,KAGtBO,IAAWP,EAAU,CAAC,GAE1BM,MAAmEA,IAAeF,KAAY,OAA6B,SAASA,EAAQ;AAC5I,MAAIK,IAAOC,EAASA,EAAS,CAAE,GAAEN,CAAO,GAAG,EAAE,cAAcE,EAAY,CAAE;AACzE,MAAI,CAACC,KAAYP,EAAU,UAAU;AACjC,WAAO,EAAE,oBAAoB,CAAA;AAEjC,MAAIW,IAAQC,EAAW,YAAYN,CAAY;AAC/C,EAAAG,EAAK,aAAaE;AAClB,MAAIE,IAAuBC,EAAgB,MAAM,QAAQd,CAAS,GAC9De,IAAgB,CAAA;AACpB,WAASC,KAAgBH;AACrB,QAAIA,EAAqB,eAAeG,CAAY,GAAG;AACnD,UAAIA,MAAiB,sBAAsB;AACvC,QAAAX,EAAa,qBAAqBQ,EAAqB,sBAAsB,CAAA;AAC7E;AAAA,MACH,WACQG,MAAiB;AACtB;AAEJ,UAAIC,IAASJ,EAAqBG,CAAY,GAC1CE,IAAKC,EAAkBR,GAAOM,CAAM,GAAGG,IAAUF,EAAG,SAASG,IAAUH,EAAG;AAC9E,UAAIG,KAAY,QAAsCA,EAAQ,QAAQ;AAClE,YAAIC,IAAeC,EAAoBd,KAAQ,CAAA,GAAI,EAAE,aAAaO,KAAgBK,CAAO;AACzF,QAAIC,MACAP,EAAc,KAAKO,CAAY,GAC/BjB,EAAaW,CAAY,IAAII,EAAQ,OAAO,CAACE,EAAa,SAAS,CAAC,EAAE,KAAK,GAAG;AAAA,MAErF;AAEG,QAAAjB,EAAaW,CAAY,IAAII,EAAQ,KAAK,GAAG;AAAA,IAEpD;AAEL,WAASnB,IAAK,GAAGuB,IAAkBT,GAAed,IAAKuB,EAAgB,QAAQvB,KAAM;AACjF,QAAIqB,IAAeE,EAAgBvB,CAAE;AACrC,IAAIqB,KACAG,EAAkBH,GAAclB,KAAY,OAA6B,SAASA,EAAQ,uBAAuBE,CAAY;AAAA,EAEpI;AACD,SAAOD;AACX;","x_google_ignoreList":[0]}