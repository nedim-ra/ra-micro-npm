import { LocalizedFontNames as u, LocalizedFontFamilies as e, FontWeights as r, FontSizes as t } from "./FluentFonts.js";
var m = "'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif", g = /* @__PURE__ */ "'Segoe UI', '".concat(u.WestEuropean, "'"), o = {
  ar: e.Arabic,
  bg: e.Cyrillic,
  cs: e.EastEuropean,
  el: e.Greek,
  et: e.EastEuropean,
  he: e.Hebrew,
  hi: e.Hindi,
  hr: e.EastEuropean,
  hu: e.EastEuropean,
  ja: e.Japanese,
  kk: e.EastEuropean,
  ko: e.Korean,
  lt: e.EastEuropean,
  lv: e.EastEuropean,
  pl: e.EastEuropean,
  ru: e.Cyrillic,
  sk: e.EastEuropean,
  "sr-latn": e.EastEuropean,
  th: e.Thai,
  tr: e.EastEuropean,
  uk: e.Cyrillic,
  vi: e.Vietnamese,
  "zh-hans": e.ChineseSimplified,
  "zh-hant": e.ChineseTraditional,
  hy: e.Armenian,
  ka: e.Georgian
};
function c(i) {
  return "".concat(i, ", ").concat(m);
}
function F(i) {
  for (var n in o)
    if (o.hasOwnProperty(n) && i && n.indexOf(i) === 0)
      return o[n];
  return g;
}
function l(i, n, a) {
  return {
    fontFamily: a,
    MozOsxFontSmoothing: "grayscale",
    WebkitFontSmoothing: "antialiased",
    fontSize: i,
    fontWeight: n
  };
}
function E(i) {
  var n = F(i), a = c(n), s = {
    tiny: l(t.mini, r.regular, a),
    xSmall: l(t.xSmall, r.regular, a),
    small: l(t.small, r.regular, a),
    smallPlus: l(t.smallPlus, r.regular, a),
    medium: l(t.medium, r.regular, a),
    mediumPlus: l(t.mediumPlus, r.regular, a),
    large: l(t.large, r.regular, a),
    xLarge: l(t.xLarge, r.semibold, a),
    xLargePlus: l(t.xLargePlus, r.semibold, a),
    xxLarge: l(t.xxLarge, r.semibold, a),
    xxLargePlus: l(t.xxLargePlus, r.semibold, a),
    superLarge: l(t.superLarge, r.semibold, a),
    mega: l(t.mega, r.semibold, a)
  };
  return s;
}
export {
  E as createFontStyles
};
//# sourceMappingURL=createFontStyles.js.map
