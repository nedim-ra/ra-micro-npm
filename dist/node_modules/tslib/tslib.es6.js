var l = function(n, r) {
  return l = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(e, t) {
    e.__proto__ = t;
  } || function(e, t) {
    for (var o in t) Object.prototype.hasOwnProperty.call(t, o) && (e[o] = t[o]);
  }, l(n, r);
};
function a(n, r) {
  if (typeof r != "function" && r !== null)
    throw new TypeError("Class extends value " + String(r) + " is not a constructor or null");
  l(n, r);
  function e() {
    this.constructor = n;
  }
  n.prototype = r === null ? Object.create(r) : (e.prototype = r.prototype, new e());
}
var u = function() {
  return u = Object.assign || function(r) {
    for (var e, t = 1, o = arguments.length; t < o; t++) {
      e = arguments[t];
      for (var c in e) Object.prototype.hasOwnProperty.call(e, c) && (r[c] = e[c]);
    }
    return r;
  }, u.apply(this, arguments);
};
function i(n, r) {
  var e = {};
  for (var t in n) Object.prototype.hasOwnProperty.call(n, t) && r.indexOf(t) < 0 && (e[t] = n[t]);
  if (n != null && typeof Object.getOwnPropertySymbols == "function")
    for (var o = 0, t = Object.getOwnPropertySymbols(n); o < t.length; o++)
      r.indexOf(t[o]) < 0 && Object.prototype.propertyIsEnumerable.call(n, t[o]) && (e[t[o]] = n[t[o]]);
  return e;
}
function s(n, r, e, t) {
  var o = arguments.length, c = o < 3 ? r : t === null ? t = Object.getOwnPropertyDescriptor(r, e) : t, p;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function") c = Reflect.decorate(n, r, e, t);
  else for (var f = n.length - 1; f >= 0; f--) (p = n[f]) && (c = (o < 3 ? p(c) : o > 3 ? p(r, e, c) : p(r, e)) || c);
  return o > 3 && c && Object.defineProperty(r, e, c), c;
}
function y(n, r, e) {
  if (e || arguments.length === 2) for (var t = 0, o = r.length, c; t < o; t++)
    (c || !(t in r)) && (c || (c = Array.prototype.slice.call(r, 0, t)), c[t] = r[t]);
  return n.concat(c || Array.prototype.slice.call(r));
}
export {
  u as __assign,
  s as __decorate,
  a as __extends,
  i as __rest,
  y as __spreadArray
};
//# sourceMappingURL=tslib.es6.js.map
