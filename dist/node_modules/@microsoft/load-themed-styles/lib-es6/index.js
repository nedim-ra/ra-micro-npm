var s = function() {
  return s = Object.assign || function(e) {
    for (var n, t = 1, l = arguments.length; t < l; t++) {
      n = arguments[t];
      for (var a in n) Object.prototype.hasOwnProperty.call(n, a) && (e[a] = n[a]);
    }
    return e;
  }, s.apply(this, arguments);
}, m = typeof window > "u" ? global : window, f = m && m.CSPSettings && m.CSPSettings.nonce, r = /* @__PURE__ */ h();
function h() {
  var e = m.__themeState__ || {
    theme: void 0,
    lastStyleElement: void 0,
    registeredStyles: []
  };
  return e.runState || (e = s(s({}, e), { perf: {
    count: 0,
    duration: 0
  }, runState: {
    flushTimer: 0,
    mode: 0,
    buffer: []
  } })), e.registeredThemableStyles || (e = s(s({}, e), { registeredThemableStyles: [] })), m.__themeState__ = e, e;
}
function c(e, n) {
  r.loadStyles ? r.loadStyles(u(e).styleString, e) : g(e);
}
function p(e) {
  r.theme = e, v();
}
function y(e) {
  S(r.registeredThemableStyles), r.registeredThemableStyles = [];
}
function S(e) {
  e.forEach(function(n) {
    var t = n && n.styleElement;
    t && t.parentElement && t.parentElement.removeChild(t);
  });
}
function v() {
  if (r.theme) {
    for (var e = [], n = 0, t = r.registeredThemableStyles; n < t.length; n++) {
      var l = t[n];
      e.push(l.themableStyle);
    }
    e.length > 0 && (y(), c([].concat.apply([], e)));
  }
}
function u(e) {
  var n = r.theme, t = !1, l = (e || []).map(function(a) {
    var i = a.theme;
    if (i) {
      t = !0;
      var o = n ? n[i] : void 0, d = a.defaultValue || "inherit";
      return n && !o && console && !(i in n) && typeof DEBUG < "u" && DEBUG && console.warn('Theming value not provided for "'.concat(i, '". Falling back to "').concat(d, '".')), o || d;
    } else
      return a.rawString;
  });
  return {
    styleString: l.join(""),
    themable: t
  };
}
function g(e) {
  if (!(typeof document > "u")) {
    var n = document.getElementsByTagName("head")[0], t = document.createElement("style"), l = u(e), a = l.styleString, i = l.themable;
    t.setAttribute("data-load-themed-styles", "true"), f && t.setAttribute("nonce", f), t.appendChild(document.createTextNode(a)), r.perf.count++, n.appendChild(t);
    var o = document.createEvent("HTMLEvents");
    o.initEvent(
      "styleinsert",
      !0,
      !1
      /* cancelable */
    ), o.args = {
      newStyle: t
    }, document.dispatchEvent(o);
    var d = {
      styleElement: t,
      themableStyle: e
    };
    i ? r.registeredThemableStyles.push(d) : r.registeredStyles.push(d);
  }
}
export {
  y as clearStyles,
  p as loadTheme
};
//# sourceMappingURL=index.js.map
